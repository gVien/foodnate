{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///webpack/bootstrap eb2dd716af20958cec97?bd1b*","webpack:///./src/lib/core/Utils.ts?d8d2","webpack:///./src/lib/core/Observable.ts?e969","webpack:///./src/lib/core/Log.ts?c4a7","webpack:///./src/lib/core/AjaxObserver.ts?c766","webpack:///./src/lib/core/http/Request.ts?1a76","webpack:///./src/lib/core/http/Headers.ts?8034","webpack:///./src/lib/core/http/Response.ts?cc32","webpack:///external {\"amd\":\"chai\",\"commonjs\":\"chai\",\"commonjs2\":\"chai\",\"root\":\"chai\"}?10dd","webpack:///external {\"amd\":\"sinon\",\"commonjs\":\"sinon\",\"commonjs2\":\"sinon\",\"root\":\"sinon\"}?c74e","webpack:///external {\"amd\":\"sinon-chai\",\"commonjs\":\"sinon-chai\",\"commonjs2\":\"sinon-chai\",\"root\":\"sinonChai\"}?a52c","webpack:///external {\"amd\":\"mocha\",\"commonjs\":\"mocha\",\"commonjs2\":\"mocha\",\"root\":\"mocha\"}?cf79","webpack:///external {\"amd\":\"../rc-sdk\",\"commonjs\":\"../rc-sdk\",\"commonjs2\":\"../rc-sdk\",\"root\":\"RCSDK\"}?79ad","webpack:///./src/lib/RCSDK-spec.ts","webpack:///./src/test/mocha.ts","webpack:///./src/test/lib/Mock.ts","webpack:///./src/lib/helpers/Timezone-spec.ts","webpack:///./src/lib/helpers/State-spec.ts","webpack:///./src/lib/helpers/Service-spec.ts","webpack:///./src/lib/helpers/Ringout-spec.ts","webpack:///./src/lib/helpers/Presence-spec.ts","webpack:///./src/lib/helpers/PhoneNumber-spec.ts","webpack:///./src/lib/helpers/Message-spec.ts","webpack:///./src/lib/helpers/Location-spec.ts","webpack:///./src/lib/helpers/ForwardingNumber-spec.ts","webpack:///./src/lib/helpers/Extension-spec.ts","webpack:///./src/lib/helpers/DeviceModel-spec.ts","webpack:///./src/lib/helpers/Device-spec.ts","webpack:///./src/lib/helpers/Country-spec.ts","webpack:///./src/lib/helpers/ContactGroup-spec.ts","webpack:///./src/lib/helpers/Contact-spec.ts","webpack:///./src/lib/helpers/Conferencing-spec.ts","webpack:///./src/lib/helpers/Call-spec.ts","webpack:///./src/lib/helpers/BlockedNumber-spec.ts","webpack:///./src/lib/helpers/Account-spec.ts","webpack:///./src/lib/core/Validator-spec.ts","webpack:///./src/lib/core/Utils-spec.ts","webpack:///./src/lib/core/Subscription-spec.ts","webpack:///./src/lib/core/Platform-spec.ts","webpack:///./src/lib/core/Observable-spec.ts","webpack:///./src/lib/core/Log-spec.ts","webpack:///./src/lib/core/List-spec.ts","webpack:///./src/lib/core/http/Response-spec.ts","webpack:///./src/lib/core/http/Request-spec.ts","webpack:///./src/lib/core/http/MultipartRequest-spec.ts","webpack:///./src/lib/core/http/MultipartRequest.ts","webpack:///./src/lib/core/Helper-spec.ts","webpack:///./src/lib/core/AjaxObserver-spec.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE,gCAAgC,EAAE,gFAAgF;AACnK;AACA;AACA,4CAA4C,EAAE,gCAAgC,EAAE;AAChF;AACA;AACA;AACA,2BAA2B,EAAE,SAAS,EAAE;AACxC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU,qCAAqC;AACjG,sDAAsD,UAAU,qCAAqC;AACrG,yDAAyD,UAAU,qCAAqC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;AChKA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;AC/EA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;AC1BA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACrDA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA,mBAAmB,OAAO;AAC1B;AACA,mBAAmB,WAAW;AAC9B;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA,gD;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;ACAA,gD;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,2FAA2F,4CAA4C;AACvI;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,gCAAgC;AAChC,8FAA8F,4CAA4C;AAC1I;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACxCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;AC3LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACdD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,UAAU,EAAE;AACvC,SAAS,kBAAkB,UAAU,EAAE;AACvC,SAAS,kBAAkB,UAAU,EAAE;AACvC,SAAS,kBAAkB,UAAU;AACrC;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC5BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yCAAyC;AAC9D,qBAAqB,kDAAkD;AACvE,qBAAqB,2CAA2C;AAChE,qBAAqB,oDAAoD;AACzE,qBAAqB,+CAA+C;AACpE,qBAAqB,yCAAyC;AAC9D,qBAAqB,kDAAkD;AACvE,qBAAqB,yCAAyC;AAC9D,qBAAqB,6CAA6C;AAClE,qBAAqB,0DAA0D;AAC/E,qBAAqB,8CAA8C;AACnE,qBAAqB,uDAAuD;AAC5E,qBAAqB,gDAAgD;AACrE,qBAAqB,8CAA8C;AACnE,qBAAqB,4CAA4C;AACjE,qBAAqB,kDAAkD;AACvE,qBAAqB,iDAAiD;AACtE,qBAAqB,wDAAwD;AAC7E,qBAAqB,qDAAqD;AAC1E,qBAAqB,8CAA8C;AACnE,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC3DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,sCAAsC,qBAAqB;AAC3D,sCAAsC,qBAAqB;AAC3D,SAAS;AACT,KAAK;AACL;AACA;AACA,sCAAsC,UAAU,2BAA2B,EAAE;AAC7E,oCAAoC,UAAU,sBAAsB,EAAE;AACtE,yCAAyC,UAAU,wBAAwB,EAAE;AAC7E,SAAS;AACT;AACA,sCAAsC,iCAAiC,2BAA2B,EAAE;AACpG,oCAAoC,iCAAiC,2BAA2B,EAAE;AAClG,yCAAyC,iCAAiC,2BAA2B,EAAE;AACvG,sCAAsC,iCAAiC,wBAAwB,EAAE;AACjG,oCAAoC,iCAAiC,wBAAwB,EAAE;AAC/F,yCAAyC,iCAAiC,wBAAwB,EAAE;AACpG,sCAAsC,iCAAiC,sBAAsB,EAAE;AAC/F,oCAAoC,iCAAiC,sBAAsB,EAAE;AAC7F,yCAAyC,iCAAiC,sBAAsB,EAAE;AAClG,SAAS;AACT,KAAK;AACL;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wCAAwC,MAAM,qBAAqB,SAAS,qBAAqB,EAAE;AACnG;AACA,+CAA+C;AAC/C,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AClDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,uCAAuC,iBAAiB;AACxD,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iBAAiB,aAAa,YAAY,6BAA6B;AACvE,iBAAiB,aAAa,YAAY,0BAA0B;AACpE,iBAAiB,aAAa,YAAY;AAC1C;AACA,iBAAiB,YAAY;AAC7B,iBAAiB,YAAY;AAC7B,iBAAiB,YAAY;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB,uBAAuB,aAAa;AACrD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,yDAAyD,aAAa,YAAY,EAAE,GAAG,aAAa,YAAY,EAAE,IAAI,iBAAiB;AACvI;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC/DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4GAA4G;AACrH,SAAS,+GAA+G;AACxH,SAAS,+GAA+G;AACxH,SAAS,qGAAqG;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS,qGAAqG;AAC9G,SAAS,mGAAmG;AAC5G,SAAS;AACT;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D,0CAA0C,qBAAqB;AAC/D,2CAA2C;AAC3C,0CAA0C,eAAe;AACzD,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iBAAiB,8CAA8C;AAC/D,iBAAiB,8CAA8C;AAC/D,iBAAiB,8CAA8C;AAC/D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,+DAA+D,0BAA0B;AACzF;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACzDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,iBAAiB,8BAA8B;AAC/C,iBAAiB;AACjB;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA,yBAAyB,qBAAqB;AAC9C,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,qBAAqB;AAC1C,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,qBAAqB;AAC1C,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,uCAAuC;AACvC,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA,aAAa;AACb,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,yCAAyC;AACzC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uDAAuD,eAAe;AACtE;AACA,uDAAuD,qCAAqC;AAC5F;AACA;AACA,uDAAuD,mCAAmC;AAC1F;AACA;AACA;AACA;AACA,uDAAuD,oCAAoC;AAC3F;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iBAAiB,2CAA2C;AAC5D,iBAAiB,2CAA2C;AAC5D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,yDAAyD,qBAAqB;AAC9E;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2CAA2C,OAAO,qBAAqB,UAAU,qBAAqB,kBAAkB;AACxH;AACA,+CAA+C;AAC/C,SAAS;AACT;AACA;AACA,qBAAqB,yBAAyB;AAC9C,uBAAuB,yBAAyB;AAChD;AACA,aAAa;AACb;AACA,+CAA+C;AAC/C,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACzPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC,UAAU,EAAE;AACtD,SAAS,iCAAiC,UAAU,EAAE;AACtD,SAAS,iCAAiC,UAAU;AACpD;AACA;AACA;AACA,6DAA6D,sBAAsB;AACnF;AACA;AACA;AACA,SAAS;AACT;AACA,6DAA6D,eAAe;AAC5E;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wEAAwE,gBAAgB;AACxF;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC9CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAAyE;AAClF,SAAS,uDAAuD;AAChE,SAAS,6DAA6D;AACtE,SAAS;AACT;AACA;AACA;AACA;AACA,+CAA+C,qBAAqB;AACpE,gDAAgD;AAChD,+CAA+C,qBAAqB;AACpE,SAAS;AACT,KAAK;AACL;AACA;AACA,2CAA2C,gCAAgC;AAC3E,2CAA2C,qBAAqB;AAChE,4CAA4C;AAC5C,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,yEAAyE,2CAA2C;AACpH;AACA;AACA;AACA;AACA,yEAAyE,+BAA+B;AACxG;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACnDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yDAAyD;AAClE,SAAS;AACT;AACA;AACA;AACA;AACA,yCAAyC;AACzC,wCAAwC,sBAAsB;AAC9D,wCAAwC,sBAAsB;AAC9D,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,uDAAuD,gBAAgB;AACvE,uDAAuD,eAAe;AACtE,SAAS;AACT;AACA,uDAAuD,cAAc;AACrE,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD,2CAA2C,cAAc;AACzD,6CAA6C,cAAc;AAC3D,0CAA0C,cAAc;AACxD,qCAAqC,eAAe;AACpD,2CAA2C,qBAAqB;AAChE,6CAA6C,uBAAuB;AACpE,0CAA0C,oBAAoB;AAC9D,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACrDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AClBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,qCAAqC,qBAAqB;AAC1D,qCAAqC,qBAAqB;AAC1D,qCAAqC,cAAc;AACnD,SAAS;AACT,KAAK;AACL;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,4BAA4B,YAAY;AACxC,wBAAwB;AACxB,aAAa;AACb;AACA,+CAA+C;AAC/C,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AChDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACdD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,SAAS;AACT,KAAK;AACL;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA,6CAA6C,mBAAmB;AAChE;AACA,+CAA+C;AAC/C,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC5BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,qBAAqB;AAC1F,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC,iBAAiB,uBAAuB;AACxC,iBAAiB;AACjB;AACA,iBAAiB,sBAAsB;AACvC,iBAAiB,sBAAsB;AACvC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,aAAa,kDAAkD;AAC/D,aAAa,0CAA0C;AACvD,aAAa,6DAA6D;AAC1E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2DAA2D,oBAAoB;AAC/E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2DAA2D,mBAAmB;AAC9E;AACA;AACA,SAAS;AACT;AACA,2DAA2D,kBAAkB;AAC7E;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,iBAAiB;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wCAAwC,6CAA6C;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+CAA+C;AAC/C,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+CAA+C;AAC/C,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC1KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACdD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD,mCAAmC,uBAAuB;AAC1D,mCAAmC,uBAAuB;AAC1D,mCAAmC,eAAe;AAClD,mCAAmC,+BAA+B;AAClE,mCAAmC,eAAe;AAClD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,iBAAiB,8BAA8B;AAC/C,iBAAiB;AACjB;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA,2BAA2B,qBAAqB;AAChD,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,qBAAqB;AACrB,aAAa;AACb;AACA;AACA,uBAAuB,qBAAqB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,wCAAwC,gBAAgB;AACxD,wCAAwC,cAAc;AACtD,wCAAwC,cAAc;AACtD,wCAAwC,gBAAgB;AACxD,wCAAwC,eAAe;AACvD,wCAAwC,eAAe;AACvD,wCAAwC,eAAe;AACvD,wCAAwC,oBAAoB;AAC5D,wCAAwC,8BAA8B;AACtE,SAAS;AACT,KAAK;AACL;AACA,SAAS,6EAA6E;AACtF,SAAS,8EAA8E;AACvF,SAAS,4EAA4E;AACrF,SAAS;AACT;AACA;AACA;AACA,6CAA6C,sCAAsC;AACnF,6CAA6C,gBAAgB;AAC7D,6CAA6C,uBAAuB;AACpE,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B,uFAAuF;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B,uFAAuF;AACpH;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAA0D;AACrF,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACrZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,qBAAqB;AACjE,4CAA4C,qBAAqB;AACjE,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACdD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mEAAmE;AACrH;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC1BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,yBAAyB;AACtG,6EAA6E,sBAAsB;AACnG,iEAAiE,YAAY;AAC7E,SAAS;AACT;AACA,yCAAyC,yBAAyB;AAClE,yCAAyC,sBAAsB;AAC/D,SAAS;AACT;AACA;AACA;AACA;AACA,0BAA0B,aAAa,WAAW;AAClD;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,wGAAwG,EAAE;AAC1G;AACA,iJAAiJ;AACjJ,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uJAAuJ;AACvJ,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iDAAiD,EAAE;AACnD,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6CAA6C,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACxOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA,aAAa;AACb,iCAAiC,aAAa;AAC9C,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,sFAAsF,EAAE;AACxF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACvKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yEAAyE;AACzE,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,qEAAqE,EAAE;AACvE;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,qEAAqE,EAAE,0BAA0B,aAAa;AAC9G;AACA;AACA,sCAAsC;AACtC,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,qEAAqE,EAAE,+BAA+B,EAAE;AACxG;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,6BAA6B;AAC7B;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,6BAA6B;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,6BAA6B;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,kCAAkC,cAAc;AAChD,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,uDAAuD,EAAE;AACzD,6CAA6C,EAAE;AAC/C,iDAAiD,EAAE;AACnD,CAAC;;;;;;;AC1XD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uCAAuC,KAAK,EAAE;AAC9C;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC5DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,EAAE;AACxC,uCAAuC,EAAE;AACzC,uCAAuC,EAAE;AACzC,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC1CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B,iBAAiB,UAAU;AAC3B,iBAAiB;AACjB,yCAAyC,eAAe;AACxD,sCAAsC,aAAa,EAAE;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,YAAY;AAC7B,iBAAiB,YAAY;AAC7B,iBAAiB;AACjB,yCAAyC,iBAAiB;AAC1D,sCAAsC,aAAa,EAAE;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,WAAW;AAC5B,iBAAiB,UAAU;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,sCAAsC,aAAa,EAAE;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,UAAU;AAC3B,iBAAiB,UAAU;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,sCAAsC,aAAa,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;AACA,iDAAiD,YAAY,kBAAkB,YAAY;AAC3F,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACrHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,+BAA+B;AAC/B;AACA,gBAAgB,GAAG;AACnB;AACA,gBAAgB;AAChB,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd,+BAA+B;AAC/B;AACA,gBAAgB,GAAG;AACnB;AACA,gBAAgB,GAAG;AACnB;AACA,gBAAgB;AAChB,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,6CAA6C;AAC7C,SAAS;AACT,8CAA8C;AAC9C;AACA;AACA,4DAA4D;AAC5D,sEAAsE;AACtE,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,+DAA+D;AAC/D;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sEAAsE,6BAA6B;AACnG;AACA;AACA,SAAS;AACT;AACA,sEAAsE,uBAAuB;AAC7F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mEAAmE,YAAY;AAC/E;AACA,iDAAiD,aAAa;AAC9D;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACvID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,8DAA8D,kBAAkB;AAChF;AACA;AACA,SAAS;AACT;AACA,8DAA8D,iCAAiC;AAC/F;AACA;AACA,SAAS;AACT;AACA,8DAA8D,gCAAgC;AAC9F;AACA;AACA,SAAS;AACT;AACA,8DAA8D,kBAAkB;AAChF;AACA;AACA,SAAS;AACT;AACA,8DAA8D,kBAAkB;AAChF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACnED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,iDAAiD;AACjD;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA,gCAAgC,wDAAwD,YAAY,aAAa;AACjH;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kBAAkB,OAAO,4BAA4B,wBAAwB;AAC7E;AACA;AACA,iDAAiD;AACjD;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA,wBAAwB,+BAA+B;AACvD;AACA;AACA;AACA,gCAAgC,wDAAwD,YAAY,aAAa;AACjH;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC9DD;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,6CAA6C;AAC7C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wGAAwG,2BAA2B;AACnI;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C,kCAAkC;AAClC,SAAS;AACT,KAAK;AACL;AACA;AACA,iCAAiC,YAAY;AAC7C,iCAAiC,aAAa;AAC9C,kCAAkC;AAClC,iCAAiC,wBAAwB;AACzD,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,uCAAuC,oBAAoB,GAAG,mBAAmB;AACjF,6CAA6C,mBAAmB;AAChE,uCAAuC,oBAAoB;AAC3D;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,uCAAuC,oBAAoB,GAAG,mBAAmB;AACjF,uCAAuC,oBAAoB;AAC3D,wCAAwC,IAAI;AAC5C;AACA,SAAS;AACT;AACA,gCAAgC,sBAAsB,EAAE;AACxD,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,yCAAyC,oBAAoB,GAAG,mBAAmB;AACnF,yCAAyC,oBAAoB;AAC7D,gCAAgC,wBAAwB,EAAE,EAAE;AAC5D,SAAS;AACT;AACA,gCAAgC,wBAAwB,EAAE;AAC1D,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B,iBAAiB;AACjB,4DAA4D,kBAAkB,EAAE;AAChF;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,yBAAyB;AAC1C,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,yBAAyB;AAC1C,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,yBAAyB;AAC1C,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,yBAAyB;AAC1C,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,yBAAyB;AAC1C,iBAAiB;AACjB;AACA,iBAAiB;AACjB,0EAA0E,kBAAkB,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,yBAAyB;AAC1C,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,cAAc;AACnC,qBAAqB,cAAc;AACnC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8DAA8D,aAAa;AAC3E,0CAA0C,aAAa;AACvD;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;ACjOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,iCAAiC;AACjC,4CAA4C,EAAE;AAC9C;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA,aAAa;AACb,qCAAqC,SAAS,EAAE;AAChD,SAAS;AACT;AACA,iCAAiC;AACjC,4CAA4C,EAAE;AAC9C;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA,aAAa;AACb,qCAAqC,SAAS,EAAE;AAChD,SAAS;AACT;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC","file":"./build/tests/specs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"chai\"), require(\"sinon\"), require(\"sinon-chai\"), require(\"mocha\"), require(\"../rc-sdk\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"chai\", \"sinon\", \"sinon-chai\", \"mocha\", \"../rc-sdk\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"chai\"), require(\"sinon\"), require(\"sinon-chai\"), require(\"mocha\"), require(\"../rc-sdk\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"chai\"], root[\"sinon\"], root[\"sinonChai\"], root[\"mocha\"], root[\"RCSDK\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_51__, __WEBPACK_EXTERNAL_MODULE_52__, __WEBPACK_EXTERNAL_MODULE_53__, __WEBPACK_EXTERNAL_MODULE_54__, __WEBPACK_EXTERNAL_MODULE_55__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap eb2dd716af20958cec97\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Utils.ts\n ** module id = 4\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar log = require('./Log');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Observable.ts\n ** module id = 6\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Log.ts\n ** module id = 7\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/AjaxObserver.ts\n ** module id = 10\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar ajaxObserver = require('../AjaxObserver');\nvar r = require('./Response');\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Request.ts\n ** module id = 16\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = require('../Utils');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Headers.ts\n ** module id = 17\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar log = require('../Log');\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Response.ts\n ** module id = 18\n ** module chunks = 0 2\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_51__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"chai\",\"commonjs\":\"chai\",\"commonjs2\":\"chai\",\"root\":\"chai\"}\n ** module id = 51\n ** module chunks = 1 2\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_52__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"sinon\",\"commonjs\":\"sinon\",\"commonjs2\":\"sinon\",\"root\":\"sinon\"}\n ** module id = 52\n ** module chunks = 1 2\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_53__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"sinon-chai\",\"commonjs\":\"sinon-chai\",\"commonjs2\":\"sinon-chai\",\"root\":\"sinonChai\"}\n ** module id = 53\n ** module chunks = 1 2\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_54__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"mocha\",\"commonjs\":\"mocha\",\"commonjs2\":\"mocha\",\"root\":\"mocha\"}\n ** module id = 54\n ** module chunks = 1 2\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_55__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"../rc-sdk\",\"commonjs\":\"../rc-sdk\",\"commonjs2\":\"../rc-sdk\",\"root\":\"RCSDK\"}\n ** module id = 55\n ** module chunks = 1 2\n **/","/// <reference path=\"../typings/externals.d.ts\" />\nexports.mocha = require('../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\ndescribe('RCSDK', function () {\n    describe('actual connection', function () {\n        it.skip('connects to sandbox', function (done) {\n            this.timeout(10000); // Per SLA should be 3 seconds\n            var server = exports.mocha.RCSDK.url.sandbox, rcsdk = new exports.mocha.RCSDK({ server: server, appKey: '', appSecret: '' }), platform = rcsdk.getPlatform();\n            platform.forceAuthentication();\n            platform\n                .apiCall({\n                url: ''\n            })\n                .then(function (ajax) {\n                expect(ajax.data.uri).to.equal(server + '/restapi/v1.0');\n                done();\n            })\n                .catch(function (e) {\n                done(e);\n            });\n        });\n        it.skip('connects to production', function (done) {\n            this.timeout(10000); // Per SLA should be 3 seconds\n            var server = exports.mocha.RCSDK.url.production, rcsdk = new exports.mocha.RCSDK({ server: server, appKey: '', appSecret: '' }), platform = rcsdk.getPlatform();\n            platform.forceAuthentication();\n            platform\n                .apiCall({\n                url: ''\n            })\n                .then(function (ajax) {\n                expect(ajax.data.uri).to.equal(server + '/restapi/v1.0');\n                done();\n            })\n                .catch(function (e) {\n                done(e);\n            });\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/RCSDK-spec.ts\n ** module id = 57\n ** module chunks = 2\n **/","/// <reference path=\"../typings/externals.d.ts\" />\nvar _mock = require('./lib/Mock');\nexports.chai = require('chai');\nexports.sinon = require(\"sinon\");\nexports.sinonChai = require('sinon-chai');\nexports.mocha = require('mocha');\nexports.RCSDK = require('../lib/RCSDK');\nexports.rcsdk = new exports.RCSDK({\n    server: 'http://whatever',\n    appKey: 'whatever',\n    appSecret: 'whatever'\n});\nexports.mock = new _mock.Mock(exports.rcsdk);\nexports.chai.use(exports.sinonChai);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/test/mocha.ts\n ** module id = 58\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Mock = (function () {\n    function Mock(rcsdk) {\n        this.rcsdk = rcsdk;\n        var platform = rcsdk.getPlatform();\n        rcsdk.getContext()\n            .useAjaxStub(true)\n            .usePubnubStub(true);\n        platform.pollInterval = 1;\n        platform.refreshDelayMs = 1;\n    }\n    Mock.prototype.registerHooks = function (suite, username) {\n        var _this = this;\n        suite.afterEach(function (done) {\n            //this.rcsdk.getPlatform()\n            //    .logout()\n            //    .then(function() {\n            //        done();\n            //    })\n            //    .catch(done);\n            done();\n        });\n        this.registerCleanup(suite);\n        suite.beforeEach(function (done) {\n            _this.authentication();\n            _this.rcsdk.getPlatform()\n                .authorize({\n                username: username || 'whatever',\n                password: 'whatever'\n            })\n                .then(function () {\n                done();\n            })\n                .catch(done);\n        });\n    };\n    Mock.prototype.registerCleanup = function (suite) {\n        var _this = this;\n        var cleanup = function () {\n            _this.rcsdk.getCache().clean();\n            // Clear events and all for singletons\n            _this.rcsdk.getPlatform().destroy();\n            _this.rcsdk.getXhrResponse().clear();\n        };\n        suite.beforeEach(function (done) {\n            cleanup();\n            done();\n        });\n        suite.afterEach(function (done) {\n            cleanup();\n            done();\n        });\n    };\n    Mock.prototype.apiCall = function (path, response, status) {\n        this.rcsdk.getXhrResponse().add({\n            path: path,\n            response: function (ajax) {\n                ajax.setStatus(status || 200);\n                return response;\n            }\n        });\n    };\n    Mock.prototype.authentication = function () {\n        this.rcsdk.getXhrResponse().add({\n            path: '/restapi/oauth/token',\n            response: function (ajax) {\n                return {\n                    'access_token': 'ACCESS_TOKEN',\n                    'token_type': 'bearer',\n                    'expires_in': 3600,\n                    'refresh_token': 'REFRESH_TOKEN',\n                    'refresh_token_expires_in': 60480,\n                    'scope': 'SMS RCM Foo Boo',\n                    'expireTime': new Date().getTime() + 3600000\n                };\n            },\n            test: function (ajax) {\n                return (!ajax.data || !ajax.data['refresh_token']);\n            }\n        });\n        this.rcsdk.getXhrResponse().add({\n            path: '/restapi/oauth/revoke',\n            response: function (ajax) {\n                return {};\n            }\n        });\n    };\n    Mock.prototype.presenceLoad = function (id, detailed) {\n        this.rcsdk.getXhrResponse().add({\n            path: '/restapi/v1.0/account/~/extension/' + id + '/presence',\n            response: function (ajax) {\n                return {\n                    \"uri\": \"https://platform.ringcentral.com/restapi/v1.0/account/123/extension/\" + id + \"/presence\",\n                    \"extension\": {\n                        \"uri\": \"https://platform.ringcentral.com/restapi/v1.0/account/123/extension/\" + id,\n                        \"id\": id,\n                        \"extensionNumber\": \"101\"\n                    },\n                    \"activeCalls\": [],\n                    \"presenceStatus\": \"Available\",\n                    \"telephonyStatus\": \"Ringing\",\n                    \"userStatus\": \"Available\",\n                    \"dndStatus\": \"TakeAllCalls\",\n                    \"extensionId\": id\n                };\n            }\n        });\n    };\n    Mock.prototype.subscribeGeneric = function (expiresIn) {\n        this.rcsdk.getXhrResponse().add({\n            path: '/restapi/v1.0/subscription',\n            response: function (ajax) {\n                expiresIn = expiresIn || 15 * 60 * 60;\n                var date = new Date();\n                return {\n                    'eventFilters': ajax.data.eventFilters,\n                    'expirationTime': new Date(date.getTime() + (expiresIn * 1000)).toISOString(),\n                    'expiresIn': expiresIn,\n                    'deliveryMode': {\n                        'transportType': 'PubNub',\n                        'encryption': false,\n                        'address': '123_foo',\n                        'subscriberKey': 'sub-c-foo',\n                        'secretKey': 'sec-c-bar'\n                    },\n                    'id': 'foo-bar-baz',\n                    'creationTime': date.toISOString(),\n                    'status': 'Active',\n                    'uri': 'https://platform.ringcentral.com/restapi/v1.0/subscription/foo-bar-baz'\n                };\n            }\n        });\n    };\n    Mock.prototype.subscribeOnPresence = function (id, detailed) {\n        id = id || '1';\n        this.rcsdk.getXhrResponse().add({\n            path: '/restapi/v1.0/subscription',\n            response: function (ajax) {\n                var date = new Date();\n                return {\n                    'eventFilters': ['/restapi/v1.0/account/~/extension/' + id + '/presence' + (detailed ? '?detailedTelephonyState=true' : '')],\n                    'expirationTime': new Date(date.getTime() + (15 * 60 * 60 * 1000)).toISOString(),\n                    'deliveryMode': {\n                        'transportType': 'PubNub',\n                        'encryption': true,\n                        'address': '123_foo',\n                        'subscriberKey': 'sub-c-foo',\n                        'secretKey': 'sec-c-bar',\n                        'encryptionAlgorithm': 'AES',\n                        'encryptionKey': 'VQwb6EVNcQPBhE/JgFZ2zw=='\n                    },\n                    'creationTime': date.toISOString(),\n                    'id': 'foo-bar-baz',\n                    'status': 'Active',\n                    'uri': 'https://platform.ringcentral.com/restapi/v1.0/subscription/foo-bar-baz'\n                };\n            }\n        });\n    };\n    Mock.prototype.tokenRefresh = function (failure) {\n        this.rcsdk.getXhrResponse().add({\n            path: '/restapi/oauth/token',\n            response: function (ajax) {\n                if (!failure)\n                    return {\n                        'access_token': 'ACCESS_TOKEN_FROM_REFRESH',\n                        'token_type': 'bearer',\n                        'expires_in': 3600,\n                        'refresh_token': 'REFRESH_TOKEN_FROM_REFRESH',\n                        'refresh_token_expires_in': 60480,\n                        'scope': 'SMS RCM Foo Boo',\n                        'expireTime': new Date().getTime() + 3600000\n                    };\n                ajax.setStatus(400);\n                return {\n                    'message': 'Wrong token',\n                    'error_description': 'Wrong token',\n                    'description': 'Wrong token'\n                };\n            },\n            test: function (ajax) {\n                return (ajax.data && ajax.data['refresh_token']);\n            }\n        });\n    };\n    return Mock;\n})();\nexports.Mock = Mock;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/test/lib/Mock.ts\n ** module id = 59\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.dictionaries.Timezone', function () {\n    'use strict';\n    var Timezone = rcsdk.getTimezoneHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Timezone.createUrl()).to.equal('/dictionary/timezone');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Timezone-spec.ts\n ** module id = 60\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.dictionaries.State', function () {\n    'use strict';\n    var State = rcsdk.getStateHelper();\n    var states = [\n        { id: 1, country: { id: '1' } },\n        { id: 2, country: { id: '2' } },\n        { id: 3, country: { id: '2' } },\n        { id: 4, country: { id: '1' } }\n    ];\n    describe('filter', function () {\n        it('filters by countryId', function () {\n            var filtered = states.filter(State.filter({ countryId: '2' }));\n            expect(filtered.length).to.equal(2);\n            expect(filtered[0]).to.equal(states[1]);\n            expect(filtered[1]).to.equal(states[2]);\n        });\n    });\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(State.createUrl()).to.equal('/dictionary/state');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/State-spec.ts\n ** module id = 61\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Service', function () {\n    describe('Convenience methods', function () {\n        it('allows to determine account features availability via set of methods', function () {\n            function testMethods(value) {\n                var features = [\n                    { \"featureName\": \"SMS\", \"enabled\": value },\n                    { \"featureName\": \"SMSReceiving\", \"enabled\": value },\n                    { \"featureName\": \"Pager\", \"enabled\": value },\n                    { \"featureName\": \"PagerReceiving\", \"enabled\": value },\n                    { \"featureName\": \"Voicemail\", \"enabled\": value },\n                    { \"featureName\": \"Fax\", \"enabled\": value },\n                    { \"featureName\": \"FaxReceiving\", \"enabled\": value },\n                    { \"featureName\": \"DND\", \"enabled\": value },\n                    { \"featureName\": \"RingOut\", \"enabled\": value },\n                    { \"featureName\": \"InternationalCalling\", \"enabled\": value },\n                    { \"featureName\": \"Presence\", \"enabled\": value },\n                    { \"featureName\": \"VideoConferencing\", \"enabled\": value },\n                    { \"featureName\": \"SalesForce\", \"enabled\": value },\n                    { \"featureName\": \"Intercom\", \"enabled\": value },\n                    { \"featureName\": \"Paging\", \"enabled\": value },\n                    { \"featureName\": \"Conferencing\", \"enabled\": value },\n                    { \"featureName\": \"VoipCalling\", \"enabled\": value },\n                    { \"featureName\": \"FreeSoftPhoneLines\", \"enabled\": value },\n                    { \"featureName\": \"HipaaCompliance\", \"enabled\": value },\n                    { \"featureName\": \"CallPark\", \"enabled\": value },\n                    { \"featureName\": \"OnDemandCallRecording\", \"enabled\": value }\n                ], service = rcsdk.getServiceHelper();\n                expect(service.isSmsEnabled(features)).to.equal(value);\n                expect(service.isSmsReceivingEnabled(features)).to.equal(value);\n                expect(service.isPagerEnabled(features)).to.equal(value);\n                expect(service.isPagerReceivingEnabled(features)).to.equal(value);\n                expect(service.isVoicemailEnabled(features)).to.equal(value);\n                expect(service.isFaxEnabled(features)).to.equal(value);\n                expect(service.isFaxReceivingEnabled(features)).to.equal(value);\n                expect(service.isDndEnabled(features)).to.equal(value);\n                expect(service.isRingOutEnabled(features)).to.equal(value);\n                expect(service.isInternationalCallingEnabled(features)).to.equal(value);\n                expect(service.isPresenceEnabled(features)).to.equal(value);\n                expect(service.isVideoConferencingEnabled(features)).to.equal(value);\n                expect(service.isSalesForceEnabled(features)).to.equal(value);\n                expect(service.isIntercomEnabled(features)).to.equal(value);\n                expect(service.isPagingEnabled(features)).to.equal(value);\n                expect(service.isConferencingEnabled(features)).to.equal(value);\n                expect(service.isVoipCallingEnabled(features)).to.equal(value);\n                expect(service.isFreeSoftPhoneLinesEnabled(features)).to.equal(value);\n                expect(service.isHipaaComplianceEnabled(features)).to.equal(value);\n                expect(service.isCallParkEnabled(features)).to.equal(value);\n                expect(service.isOnDemandCallRecordingEnabled(features)).to.equal(value);\n            }\n            testMethods(true);\n            testMethods(false);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Service-spec.ts\n ** module id = 62\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Ringout', function () {\n    'use strict';\n    var Ringout = rcsdk.getRingoutHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Ringout.createUrl()).to.equal('/account/~/extension/~/ringout');\n            expect(Ringout.createUrl({}, 'foo')).to.equal('/account/~/extension/~/ringout/foo');\n            expect(Ringout.createUrl({ extensionId: 'foo' })).to.equal('/account/~/extension/foo/ringout');\n            expect(Ringout.createUrl({ extensionId: 'foo' }, 'bar')).to.equal('/account/~/extension/foo/ringout/bar');\n        });\n    });\n    describe('status helpers', function () {\n        it('unsaved ringout is not inProgress/error/success', function () {\n            expect(Ringout.isSuccess({ status: { callStatus: 'InProgress' } })).to.equal(false);\n            expect(Ringout.isError({ status: { callStatus: 'Error' } })).to.equal(false);\n            expect(Ringout.isInProgress({ status: { callStatus: 'Success' } })).to.equal(false);\n        });\n        it('provides interfaces to determine statuses', function () {\n            expect(Ringout.isSuccess({ id: 'foo', uri: 'bar', status: { callStatus: 'InProgress' } })).to.equal(false);\n            expect(Ringout.isError({ id: 'foo', uri: 'bar', status: { callStatus: 'InProgress' } })).to.equal(false);\n            expect(Ringout.isInProgress({ id: 'foo', uri: 'bar', status: { callStatus: 'InProgress' } })).to.equal(true);\n            expect(Ringout.isSuccess({ id: 'foo', uri: 'bar', status: { callStatus: 'Success' } })).to.equal(true);\n            expect(Ringout.isError({ id: 'foo', uri: 'bar', status: { callStatus: 'Success' } })).to.equal(false);\n            expect(Ringout.isInProgress({ id: 'foo', uri: 'bar', status: { callStatus: 'Success' } })).to.equal(false);\n            expect(Ringout.isSuccess({ id: 'foo', uri: 'bar', status: { callStatus: 'Error' } })).to.equal(false);\n            expect(Ringout.isError({ id: 'foo', uri: 'bar', status: { callStatus: 'Error' } })).to.equal(true);\n            expect(Ringout.isInProgress({ id: 'foo', uri: 'bar', status: { callStatus: 'Error' } })).to.equal(false);\n        });\n    });\n    describe('validate', function () {\n        it('performs basic validation', function () {\n            var res = Ringout.validate({});\n            expect(res.isValid).to.equal(false);\n            expect(res.errors['to'][0]).to.be.instanceOf(Error);\n            expect(res.errors['to'].length).to.equal(1);\n            expect(res.errors['from'][0]).to.be.instanceOf(Error);\n            expect(res.errors['from'].length).to.equal(1);\n        });\n        it('passes validation if values are correct', function () {\n            var res = Ringout.validate({ to: { phoneNumber: 'foo' }, from: { phoneNumber: 'foo' } });\n            expect(res.isValid).to.equal(true);\n            expect(res.errors).to.deep.equal({});\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Ringout-spec.ts\n ** module id = 63\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Presence', function () {\n    'use strict';\n    var Presence = rcsdk.getPresenceHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Presence.createUrl()).to.equal('/account/~/extension/~/presence');\n            expect(Presence.createUrl({}, 'foo')).to.equal('/account/~/extension/foo/presence');\n            expect(Presence.createUrl({ detailed: true }, 'foo')).to.equal('/account/~/extension/foo/presence?detailedTelephonyState=true');\n        });\n    });\n    describe('attachToExtensions', function () {\n        it('attaches presence to all matching extensions', function () {\n            var presences = [\n                { extension: { id: 'foo' }, presenceStatus: 'Offline' },\n                { extension: { id: 'bar' }, presenceStatus: 'Busy' },\n                { extension: { id: 'baz' }, presenceStatus: 'Available' }\n            ], extensions = [\n                { id: 'foo' },\n                { id: 'bar' },\n                { id: 'baz' },\n                { id: 'qux' }\n            ];\n            Presence.attachToExtensions(extensions, presences);\n            expect(extensions[0].presence).to.equal(presences[0]);\n            expect(extensions[1].presence).to.equal(presences[1]);\n            expect(extensions[2].presence).to.equal(presences[2]);\n            expect(extensions[3].presence).to.be.an('undefined');\n        });\n        it('attaches presence to all matching extensions (with merge)', function () {\n            var presences = [\n                { extensionId: 'baz', presenceStatus: 'Available', foo: 'bar' }\n            ], extensions = [\n                { id: 'baz', presence: { foo: 'baz' } }\n            ];\n            expect(extensions[0].presence.foo).to.equal('baz');\n            Presence.attachToExtensions(extensions, presences, true);\n            expect(extensions[0].presence.foo).to.equal('bar');\n            expect(extensions[0].presence.presenceStatus).to.equal('Available');\n        });\n    });\n    describe('getSubscription', function () {\n        it('returns pre-configured Subscription object', function () {\n            var notificaction = Presence.getSubscription({ detailed: true }, 'foo');\n            expect(notificaction.eventFilters.length).to.equal(1);\n            expect(notificaction.eventFilters[0]).to.equal('/account/~/extension/foo/presence?detailedTelephonyState=true');\n        });\n    });\n    describe('updateSubscription', function () {\n        it('adds proper events to Subscription object', function () {\n            var notificaction = rcsdk.getSubscription();\n            expect(notificaction.eventFilters.length).to.equal(0);\n            Presence.updateSubscription(notificaction, [{ extension: { id: 'foo' } }, { extension: { id: 'bar' } }], { detailed: true });\n            expect(notificaction.eventFilters.length).to.equal(2);\n            expect(notificaction.eventFilters[0]).to.equal('/account/~/extension/foo/presence?detailedTelephonyState=true');\n            expect(notificaction.eventFilters[1]).to.equal('/account/~/extension/bar/presence?detailedTelephonyState=true');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Presence-spec.ts\n ** module id = 64\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.ForwardingNumber', function () {\n    'use strict';\n    var PhoneNumber = rcsdk.getPhoneNumberHelper();\n    var phoneNumbers = [\n        { usageType: 'MainCompanyNumber', paymentType: 'TollFree', type: 'VoiceFax', phoneNumber: '1', features: [] },\n        { usageType: 'AdditionalCompanyNumber', paymentType: 'TollFree', type: 'Voice', phoneNumber: '1', features: [] },\n        { usageType: 'AdditionalCompanyNumber', paymentType: 'Local', type: 'VoiceFax', phoneNumber: '1', features: [] },\n        { usageType: 'CompanyNumber', paymentType: 'Local', type: 'VoiceFax', phoneNumber: '1', features: [] },\n        {\n            usageType: 'DirectNumber',\n            paymentType: 'Local',\n            type: 'VoiceFax',\n            phoneNumber: '1',\n            features: ['SmsSender', 'CallerId']\n        },\n        { usageType: 'CompanyNumber', paymentType: 'Local', type: 'VoiceFax', phoneNumber: '1', features: [] },\n        { usageType: 'CompanyFaxNumber', paymentType: 'Local', type: 'Fax', phoneNumber: '1', features: [] },\n        { usageType: 'ForwardedNumber', paymentType: 'Local', type: 'VoiceFax', phoneNumber: '1', features: [] }\n    ];\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(PhoneNumber.createUrl()).to.equal('/account/~/phone-number');\n            expect(PhoneNumber.createUrl({ extensionId: 'foo' })).to.equal('/account/~/extension/foo/phone-number');\n            expect(PhoneNumber.createUrl({ extensionId: 'foo' }, 'bar')).to.equal('/account/~/extension/foo/phone-number/bar');\n            expect(PhoneNumber.createUrl({}, 'bar')).to.equal('/account/~/phone-number/bar');\n            expect(PhoneNumber.createUrl({ lookup: true })).to.equal('/number-pool/lookup');\n        });\n    });\n    describe('comparator', function () {\n        it('sorts by usageType, paymentType, type by default', function () {\n            var phoneNumbers = [\n                { usageType: '2', paymentType: '1', type: '1' },\n                { usageType: '1', paymentType: '2', type: '2' },\n                { usageType: '1', paymentType: '2', type: '1' },\n                { usageType: '1', paymentType: '1', type: '1' }\n            ];\n            var sorted = [].concat(phoneNumbers).sort(PhoneNumber.comparator());\n            expect(sorted[0]).to.equal(phoneNumbers[3]);\n            expect(sorted[1]).to.equal(phoneNumbers[2]);\n            expect(sorted[2]).to.equal(phoneNumbers[1]);\n            expect(sorted[3]).to.equal(phoneNumbers[0]);\n        });\n    });\n    describe('filter', function () {\n        it('provides functionality to filter by feature', function () {\n            var filtered = [];\n            filtered = phoneNumbers.filter(PhoneNumber.filter({ features: ['SmsSender'] }));\n            expect(filtered.length).to.equal(1);\n            expect(filtered[0]).to.equal(phoneNumbers[4]);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/PhoneNumber-spec.ts\n ** module id = 65\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Message', function () {\n    'use strict';\n    var Message = rcsdk.getMessageHelper();\n    describe('attachContacts', function () {\n        it('attaches contacts to all callerInfo structures found in each call', function () {\n            var contacts = [\n                { id: 'foo', homePhone: 'foo' },\n                { id: 'bar', homePhone: 'bar' },\n                { id: 'baz', homePhone: 'baz' }\n            ], messages = [\n                {\n                    direction: 'Outbound',\n                    from: { phoneNumber: 'foo' },\n                    to: [\n                        { phoneNumber: 'bar' },\n                        { phoneNumber: 'baz' }\n                    ]\n                },\n                {\n                    direction: 'Inbound',\n                    from: { phoneNumber: 'baz' },\n                    to: [\n                        { phoneNumber: 'notfound' }\n                    ]\n                }\n            ];\n            Message.attachContacts(contacts, messages);\n            expect(messages[0].from.contact).to.equal(contacts[0]);\n            expect(messages[0].to[0].contact).to.equal(contacts[1]);\n            expect(messages[0].to[1].contact).to.equal(contacts[2]);\n            expect(messages[1].from.contact).to.equal(contacts[2]);\n            expect(messages[1].to[0].contact).to.be.an('undefined');\n        });\n    });\n    describe('getCallerInfo', function () {\n        var messages = [\n            {\n                direction: 'Outbound',\n                from: {\n                    phoneNumber: 'foo'\n                },\n                to: [\n                    { phoneNumber: 'bar' },\n                    { phoneNumber: 'baz' }\n                ]\n            },\n            {\n                direction: 'Inbound',\n                from: { phoneNumber: 'baz' },\n                to: [\n                    { phoneNumber: 'qux' }\n                ]\n            }\n        ];\n        it('returns callerInfo of from or to properties depending on direction', function () {\n            expect(Message.getCallerInfos(messages[0]).length).to.equal(2);\n            expect(Message.getCallerInfos(messages[0])[0].phoneNumber).to.equal('bar');\n            expect(Message.getCallerInfos(messages[0])[1].phoneNumber).to.equal('baz');\n            expect(Message.getCallerInfos(messages[1]).length).to.equal(1);\n            expect(Message.getCallerInfos(messages[1])[0].phoneNumber).to.equal('baz');\n        });\n        it('returms all callerInfos in an order depending on direction', function () {\n            expect(Message.getAllCallerInfos(messages[0]).length).to.equal(3);\n            expect(Message.getAllCallerInfos(messages[0])[0].phoneNumber).to.equal('bar');\n            expect(Message.getAllCallerInfos(messages[0])[1].phoneNumber).to.equal('baz');\n            expect(Message.getAllCallerInfos(messages[0])[2].phoneNumber).to.equal('foo');\n            expect(Message.getAllCallerInfos(messages[1]).length).to.equal(2);\n            expect(Message.getAllCallerInfos(messages[1])[0].phoneNumber).to.equal('baz');\n            expect(Message.getAllCallerInfos(messages[1])[1].phoneNumber).to.equal('qux');\n        });\n    });\n    describe('shorten', function () {\n        it('creates a short message out of full message structure', function () {\n            var message = {\n                direction: 'Outbound',\n                subject: 'qux',\n                from: {\n                    phoneNumber: 'foo'\n                },\n                to: [\n                    { phoneNumber: 'bar' },\n                    { phoneNumber: 'baz' }\n                ]\n            }, short = Message.shorten(message);\n            expect(short.direction).to.be.an('undefined');\n            expect(short.subject).to.be.an('undefined');\n            expect(short.text).to.equal(message.subject);\n            expect(short.from).to.equal(message.from);\n            expect(short.to).to.equal(message.to);\n        });\n    });\n    describe('createUrl', function () {\n        it('produces various urls depending on options', function () {\n            expect(Message.createUrl()).to.equal('/account/~/extension/~/message-store');\n            expect(Message.createUrl({}, 1)).to.equal('/account/~/extension/~/message-store/1');\n            expect(Message.createUrl({ extensionId: 'foo' }, '1')).to.equal('/account/~/extension/foo/message-store/1');\n            expect(Message.createUrl({\n                extensionId: 'foo',\n                sync: true\n            }, '1')).to.equal('/account/~/extension/foo/message-sync');\n            expect(Message.createUrl({ extensionId: 'foo', sms: true }, '1')).to.equal('/account/~/extension/foo/sms');\n            expect(Message.createUrl({\n                extensionId: 'foo',\n                pager: true\n            }, '1')).to.equal('/account/~/extension/foo/company-pager');\n        });\n    });\n    describe('loadRequest, saveRequest, deleteRequest', function () {\n        it('produces various urls depending on options', function () {\n            expect(Message.loadRequest().url).to.equal('/account/~/extension/~/message-store');\n            expect(Message.saveRequest({}).url).to.equal('/account/~/extension/~/message-store');\n        });\n    });\n    describe('getAttachmentUrl & getAttachmentContentType', function () {\n        mock.registerHooks(this);\n        var platform = rcsdk.getPlatform(), message = {\n            attachments: [\n                {\n                    uri: '/account/~/extension/~/message-store/1/attachment/---1---',\n                    contentType: 'foo'\n                },\n                {\n                    uri: '/account/~/extension/~/message-store/1/attachment/---2---',\n                    contentType: 'bar'\n                }\n            ]\n        };\n        it('gives a wrapped donwloadable url, empty string if not found', function () {\n            expect(Message.getAttachmentUrl(message, 0)).to.equal('http://whatever/restapi/v1.0/account/~/extension/~/message-store/1/attachment/---1---?_method=GET&access_token=' + platform.getToken());\n            expect(Message.getAttachmentUrl(message, 1)).to.equal('http://whatever/restapi/v1.0/account/~/extension/~/message-store/1/attachment/---2---?_method=GET&access_token=' + platform.getToken());\n            expect(Message.getAttachmentUrl(message, 2)).to.equal('');\n        });\n        it('gives a content type, empty string if not found', function () {\n            expect(Message.getAttachmentContentType(message, 0)).to.equal('foo');\n            expect(Message.getAttachmentContentType(message, 1)).to.equal('bar');\n            expect(Message.getAttachmentContentType(message, 2)).to.equal('');\n        });\n    });\n    describe('filter', function () {\n        var messages = [\n            {\n                direction: 'Outbound',\n                availability: 'Purged',\n                readStatus: 'Read',\n                conversationId: '1'\n            },\n            {\n                direction: 'Inbound',\n                availability: 'Deleted',\n                readStatus: 'Read',\n                conversationId: '1'\n            },\n            {\n                direction: 'Outbound',\n                availability: 'Alive',\n                readStatus: 'Unread',\n                conversationId: '2'\n            },\n            {\n                direction: 'Outbound',\n                availability: 'Alive',\n                readStatus: 'Read',\n                conversationId: '2',\n                subject: 'foo bar baz'\n            }\n        ];\n        it('rules out dead objects by default', function () {\n            var filtered = messages.filter(Message.filter());\n            expect(filtered.length).to.equal(2);\n            expect(filtered[0]).to.equal(messages[2]);\n            expect(filtered[1]).to.equal(messages[3]);\n        });\n        it('rules out objects by criteria', function () {\n            var filtered;\n            filtered = messages.filter(Message.filter({ alive: false }));\n            expect(filtered.length).to.equal(4);\n            filtered = messages.filter(Message.filter({ alive: false, direction: 'Inbound' }));\n            expect(filtered.length).to.equal(1);\n            expect(filtered[0]).to.equal(messages[1]);\n            filtered = messages.filter(Message.filter({ alive: false, readStatus: 'Read' }));\n            expect(filtered.length).to.equal(3);\n            expect(filtered[0]).to.equal(messages[0]);\n            expect(filtered[1]).to.equal(messages[1]);\n            expect(filtered[2]).to.equal(messages[3]);\n            filtered = messages.filter(Message.filter({ alive: false, conversationId: '2' }));\n            expect(filtered.length).to.equal(2);\n            expect(filtered[0]).to.equal(messages[2]);\n            expect(filtered[1]).to.equal(messages[3]);\n            filtered = messages.filter(Message.filter({ search: 'bar' }));\n            expect(filtered.length).to.equal(1);\n            expect(filtered[0]).to.equal(messages[3]);\n        });\n    });\n    describe('comparator', function () {\n        it('sorts by creationTime', function () {\n            var messages = [\n                { creationTime: '2014-08-26T09:46:06.781Z' },\n                { creationTime: '2014-08-26T08:46:06.781Z' },\n                { creationTime: '2014-08-26T07:46:06.781Z' }\n            ];\n            var sorted = [].concat(messages).sort(Message.comparator());\n            expect(sorted[0]).to.equal(messages[2]);\n            expect(sorted[1]).to.equal(messages[1]);\n            expect(sorted[2]).to.equal(messages[0]);\n        });\n    });\n    describe('getSubscription', function () {\n        it('returns pre-configured Subscription object', function () {\n            var notificaction = Message.getSubscription({ extensionId: 'foo' });\n            expect(notificaction.eventFilters.length).to.equal(1);\n            expect(notificaction.eventFilters[0]).to.equal('/account/~/extension/foo/message-store');\n        });\n    });\n    describe('validate', function () {\n        it('performs basic SmsMessage validation', function () {\n            var res = Message.validateSMS({});\n            expect(res.isValid).to.equal(false);\n            expect(res.errors['to'][0]).to.be.instanceOf(Error);\n            expect(res.errors['from'][0]).to.be.instanceOf(Error);\n            expect(res.errors['subject'][0]).to.be.instanceOf(Error);\n        });\n        it('performs basic PagerMessage validation', function () {\n            var res = Message.validatePager({});\n            expect(res.isValid).to.equal(false);\n            expect(res.errors['to'][0]).to.be.instanceOf(Error);\n            expect(res.errors['from'][0]).to.be.instanceOf(Error);\n            expect(res.errors['subject'][0]).to.be.instanceOf(Error);\n        });\n        it('passes SmsMessage validation if values are correct', function () {\n            var res = Message.validateSMS({ to: [{ phoneNumber: 'foo' }], from: { phoneNumber: 'foo' }, subject: 'foo' });\n            expect(res.isValid).to.equal(true);\n            expect(res.errors).to.deep.equal({});\n        });\n        it('passes PagerMessage validation if values are correct', function () {\n            var res = Message.validatePager({\n                to: { extensionNumber: 'foo' },\n                from: { extensionNumber: 'foo' },\n                subject: 'foo'\n            });\n            expect(res.isValid).to.equal(true);\n            expect(res.errors).to.deep.equal({});\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Message-spec.ts\n ** module id = 66\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.dictionaries.Location', function () {\n    'use strict';\n    var Location = rcsdk.getLocationHelper();\n    var locations = [\n        { npa: '888', nxx: '222', state: { id: '1' } },\n        { npa: '888', nxx: '111', state: { id: '1' } },\n        { npa: '777', nxx: '111', state: { id: '2' } }\n    ];\n    describe('filter', function () {\n        it('filters by unique NPA', function () {\n            var filtered = locations.filter(Location.filter({ onlyUniqueNPA: true }));\n            expect(filtered.length).to.equal(2);\n            expect(filtered[0]).to.equal(locations[0]);\n            expect(filtered[1]).to.equal(locations[2]);\n        });\n        it('filters by stateId', function () {\n            var filtered = locations.filter(Location.filter({ stateId: '2' }));\n            expect(filtered.length).to.equal(1);\n            expect(filtered[0]).to.equal(locations[2]);\n        });\n    });\n    describe('comparator', function () {\n        it('sorts by NPA', function () {\n            var sorted = [].concat(locations).sort(Location.comparator());\n            expect(sorted[0]).to.equal(locations[2]);\n            expect(sorted[1]).to.equal(locations[0]);\n            expect(sorted[2]).to.equal(locations[1]);\n        });\n        it('sorts by NXX', function () {\n            var sorted = [].concat(locations).sort(Location.comparator({ sortBy: 'nxx' }));\n            expect(sorted[0]).to.equal(locations[2]);\n            expect(sorted[1]).to.equal(locations[1]);\n            expect(sorted[2]).to.equal(locations[0]);\n        });\n    });\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Location.createUrl()).to.equal('/dictionary/location');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Location-spec.ts\n ** module id = 67\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.ForwardingNumber', function () {\n    'use strict';\n    var ForwardingNumber = rcsdk.getForwardingNumberHelper();\n    var forwardingNumbers = [\n        { label: '3', phoneNumber: '1', features: ['CallForwarding', 'CallFlip'] },\n        { label: '2', phoneNumber: '2', features: ['CallFlip'] },\n        { label: '1', phoneNumber: '2', features: ['CallForwarding'] },\n        { label: '4', phoneNumber: '2', features: [] }\n    ];\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(ForwardingNumber.createUrl()).to.equal('/account/~/extension/~/forwarding-number');\n            expect(ForwardingNumber.createUrl({ extensionId: 'foo' })).to.equal('/account/~/extension/foo/forwarding-number');\n            expect(ForwardingNumber.createUrl({}, 'foo')).to.equal('/account/~/extension/~/forwarding-number/foo');\n            expect(ForwardingNumber.createUrl({ extensionId: 'foo' }, 'bar')).to.equal('/account/~/extension/foo/forwarding-number/bar');\n        });\n    });\n    describe('getId', function () {\n        it('returns either ID or phoneNumber', function () {\n            expect(ForwardingNumber.getId({ id: 'foo', phoneNumber: 'bar' })).to.equal('foo');\n            expect(ForwardingNumber.getId({ phoneNumber: 'bar' })).to.equal('bar');\n            expect(ForwardingNumber.getId({})).to.equal(undefined);\n        });\n    });\n    describe('comparator', function () {\n        it('sorts by label by default', function () {\n            var sorted = [].concat(forwardingNumbers).sort(ForwardingNumber.comparator());\n            expect(sorted[0]).to.equal(forwardingNumbers[2]);\n            expect(sorted[1]).to.equal(forwardingNumbers[1]);\n            expect(sorted[2]).to.equal(forwardingNumbers[0]);\n        });\n    });\n    describe('filter', function () {\n        it('provides functionality to filter by feature', function () {\n            var filtered = [];\n            filtered = forwardingNumbers.filter(ForwardingNumber.filter({ features: ['CallForwarding', 'CallFlip'] }));\n            expect(filtered.length).to.equal(3);\n            expect(filtered[0]).to.equal(forwardingNumbers[0]);\n            expect(filtered[1]).to.equal(forwardingNumbers[1]);\n            expect(filtered[2]).to.equal(forwardingNumbers[2]);\n            filtered = forwardingNumbers.filter(ForwardingNumber.filter({ features: ['CallForwarding'] }));\n            expect(filtered[0]).to.equal(forwardingNumbers[0]);\n            expect(filtered[1]).to.equal(forwardingNumbers[2]);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ForwardingNumber-spec.ts\n ** module id = 68\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Extension', function () {\n    'use strict';\n    var Extension = rcsdk.getExtensionHelper();\n    var extensions = [\n        { name: 'One One One', extensionNumber: 111, type: 'foo' },\n        { name: 'Twenty One', extensionNumber: 21, type: 'bar' }\n    ];\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Extension.createUrl()).to.equal('/account/~/extension');\n            expect(Extension.createUrl({}, 'foo')).to.equal('/account/~/extension/foo');\n            expect(Extension.createUrl({ departmentId: 'foo' })).to.equal('/account/~/department/foo/members');\n            expect(Extension.createUrl({ departmentId: 'foo' }, 'bar')).to.equal('/account/~/department/foo/members/bar');\n        });\n    });\n    describe('comparator', function () {\n        it('allows to sort extensions by extensionNumber', function () {\n            var exts = [].concat(extensions).sort(Extension.comparator());\n            expect(exts[0]).to.equal(extensions[1]);\n            expect(exts[1]).to.equal(extensions[0]);\n        });\n    });\n    describe('filter', function () {\n        it('allows to filter extensions by name and extensionNumber', function () {\n            expect(extensions.filter(Extension.filter({ search: 'One' })).length).to.equal(2);\n            expect(extensions.filter(Extension.filter({ search: '21' })).length).to.equal(1);\n        });\n        it('allows to filter extensions by type', function () {\n            expect(extensions.filter(Extension.filter({ type: 'foo' })).length).to.equal(1);\n        });\n    });\n    describe('convenience methods', function () {\n        it('provides type detection', function () {\n            expect(Extension.isUser()).to.equal(undefined);\n            expect(Extension.isDepartment()).to.equal(undefined);\n            expect(Extension.isAnnouncement()).to.equal(undefined);\n            expect(Extension.isVoicemail()).to.equal(undefined);\n            expect(Extension.isUser({ type: 'foo' })).to.equal(false);\n            expect(Extension.isDepartment({ type: 'foo' })).to.equal(false);\n            expect(Extension.isAnnouncement({ type: 'foo' })).to.equal(false);\n            expect(Extension.isVoicemail({ type: 'foo' })).to.equal(false);\n            expect(Extension.isUser({ type: 'User' })).to.equal(true);\n            expect(Extension.isDepartment({ type: 'Department' })).to.equal(true);\n            expect(Extension.isAnnouncement({ type: 'Announcement' })).to.equal(true);\n            expect(Extension.isVoicemail({ type: 'Voicemail' })).to.equal(true);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Extension-spec.ts\n ** module id = 69\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.dictionaries.DeviceModel', function () {\n    'use strict';\n    var DeviceModel = rcsdk.getDeviceModelHelper();\n    describe('getId', function () {\n        it('provides artificial IDs', function () {\n            expect(DeviceModel.getId({\n                sku: '23',\n                name: 'Polycom IP 321 Basic IP phone',\n                deviceClass: 'Desk Phone'\n            })).to.equal('23');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/DeviceModel-spec.ts\n ** module id = 70\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Device', function () {\n    'use strict';\n    var Device = rcsdk.getDeviceHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Device.createUrl()).to.equal('/account/~/device');\n            expect(Device.createUrl({}, 'foo')).to.equal('/account/~/device/foo');\n            expect(Device.createUrl({ extensionId: 'foo' })).to.equal('/account/~/extension/foo/device');\n            expect(Device.createUrl({ extensionId: 'foo' }, 'bar')).to.equal('/account/~/extension/foo/device/bar');\n            expect(Device.createUrl({ order: true }, 'bar')).to.equal('/account/~/order');\n        });\n    });\n    describe('validate', function () {\n        it('performs basic validation', function () {\n            var res = Device.validate({});\n            expect(res.isValid).to.equal(false);\n            expect(res.errors['emergencyServiceAddress-street'][0]).to.be.instanceOf(Error);\n            expect(res.errors['emergencyServiceAddress-city'][0]).to.be.instanceOf(Error);\n            expect(res.errors['emergencyServiceAddress-state'][0]).to.be.instanceOf(Error);\n            expect(res.errors['emergencyServiceAddress-country'][0]).to.be.instanceOf(Error);\n            expect(res.errors['emergencyServiceAddress-zip'][0]).to.be.instanceOf(Error);\n            expect(res.errors['emergencyServiceAddress-customerName'][0]).to.be.instanceOf(Error);\n            expect(res.errors['extension'][0]).to.be.instanceOf(Error);\n            expect(res.errors['model'][0]).to.be.instanceOf(Error);\n        });\n        it('passes validation if values are correct', function () {\n            var res = Device.validate({\n                emergencyServiceAddress: {\n                    street: 'foo',\n                    city: 'foo',\n                    state: 'foo',\n                    country: 'foo',\n                    zip: 'foo',\n                    customerName: 'foo'\n                },\n                extension: { id: 'foo' },\n                model: { sku: 'foo' }\n            });\n            expect(res.isValid).to.equal(true);\n            expect(res.errors).to.deep.equal({});\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Device-spec.ts\n ** module id = 71\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.dictionaries.Country', function () {\n    'use strict';\n    var Country = rcsdk.getCountryHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Country.createUrl()).to.equal('/dictionary/country');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Country-spec.ts\n ** module id = 72\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.ContactGroup', function () {\n    'use strict';\n    var ContactGroup = rcsdk.getContactGroupHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(ContactGroup.createUrl()).to.equal('/account/~/extension/~/address-book/group');\n            expect(ContactGroup.createUrl({}, 'foo')).to.equal('/account/~/extension/~/address-book/group/foo');\n        });\n    });\n    describe('validate', function () {\n        it('performs basic validation', function () {\n            var res = ContactGroup.validate({});\n            expect(res.isValid).to.equal(false);\n            expect(res.errors['groupName'][0]).to.be.instanceOf(Error);\n            expect(res.errors['groupName'].length).to.equal(1);\n        });\n        it('passes validation if values are correct', function () {\n            var res = ContactGroup.validate({ groupName: 'foo' });\n            expect(res.isValid).to.equal(true);\n            expect(res.errors).to.deep.equal({});\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ContactGroup-spec.ts\n ** module id = 73\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Contact', function () {\n    'use strict';\n    var Contact = rcsdk.getContactHelper();\n    describe('match & matchAsPhone', function () {\n        it('matches a string against a contact', function () {\n            var contact = {\n                firstName: 'firstName',\n                lastName: 'lastName',\n                company: 'lastName',\n                nickName: 'lastName',\n                middleName: 'lastName',\n                email: 'lastName',\n                email2: 'lastName',\n                email3: 'lastName',\n                homePhone: '+homePhone',\n                homePhone2: 'lastName',\n                businessPhone: 'lastName',\n                businessPhone2: 'lastName',\n                mobilePhone: 'lastName',\n                companyPhone: 'lastName',\n                assistantPhone: 'lastName',\n                carPhone: 'lastName',\n                otherPhone: 'lastName',\n                callbackPhone: 'lastName',\n                businessFax: 'lastName',\n                otherFax: 'lastName',\n                businessAddress: {\n                    country: 'businessAddress-street',\n                    street: 'businessAddress-street',\n                    city: 'businessAddress-city',\n                    state: 'businessAddress-state',\n                    zip: 'businessAddress-zip'\n                },\n                homeAddress: {\n                    country: 'homeAddress-street',\n                    street: 'homeAddress-street',\n                    city: 'homeAddress-city',\n                    state: 'homeAddress-state',\n                    zip: 'homeAddress-zip'\n                },\n                otherAddress: {\n                    country: 'otherAddress-street',\n                    street: 'otherAddress-street',\n                    city: 'otherAddress-city',\n                    state: 'otherAddress-state',\n                    zip: 'otherAddress-zip'\n                }\n            };\n            expect(Contact.match(contact, 'firstName')).to.equal(contact.firstName);\n            expect(Contact.match(contact, 'lastName')).to.equal(contact.lastName);\n            expect(Contact.matchAsPhone(contact, 'homePhone')).to.equal(contact.homePhone);\n            expect(Contact.matchAsPhone(contact, 'businessAddress-street')).to.equal(null);\n            // search in address\n            expect(Contact.match(contact, 'businessAddress-street')).to.equal(contact.businessAddress.street);\n            expect(Contact.match(contact, 'businessAddress-street', { inAddresses: false })).to.equal(null);\n        });\n    });\n    describe('attachContacts', function () {\n        it('provides corresponding contacts to callerInfo objects', function () {\n            var contacts = [\n                { homePhone: '+(1)foo' },\n                { homePhone: '+(1)foo' },\n                { homePhone: '+(2)bar' }\n            ], callerInfos = [\n                { phoneNumber: '2bar' },\n                { phoneNumber: '1foo' },\n                { phoneNumber: 'notfound' }\n            ];\n            Contact.attachToCallerInfos(callerInfos, contacts);\n            expect(callerInfos[0].contact).to.equal(contacts[2]);\n            expect(callerInfos[0].contactPhone).to.equal(contacts[2].homePhone);\n            // first contact must win\n            expect(callerInfos[1].contact).to.equal(contacts[0]);\n            expect(callerInfos[1].contactPhone).to.equal(contacts[0].homePhone);\n            expect(callerInfos[1].contact).to.not.equal(contacts[1]);\n            expect(callerInfos[2].contact).to.be.an('undefined');\n            expect(callerInfos[2].contact).to.be.an('undefined');\n            expect(callerInfos[2].contactPhone).to.be.an('undefined');\n        });\n    });\n    describe('filter', function () {\n        var contacts = [\n            { lastName: 'unavailable', availability: 'Purged' },\n            { firstName: 'foo', availability: 'Alive' },\n            { lastName: 'foo', businessFax: 'foo', availability: 'Alive' },\n            { homePhone: 'foo', availability: 'Alive' }\n        ];\n        it('rules out dead objects by default', function () {\n            var filtered = contacts.filter(Contact.filter());\n            expect(filtered.length).to.equal(3);\n            expect(filtered[0]).to.equal(contacts[1]);\n            expect(filtered[1]).to.equal(contacts[2]);\n            expect(filtered[2]).to.equal(contacts[3]);\n        });\n        it('rules out by search phrase', function () {\n            var filtered = contacts.filter(Contact.filter({ startsWith: 'foo' }));\n            expect(filtered.length).to.equal(3);\n            expect(filtered[0]).to.equal(contacts[1]);\n            expect(filtered[1]).to.equal(contacts[2]);\n            expect(filtered[2]).to.equal(contacts[3]);\n        });\n        it('rules out by items with no phones', function () {\n            var filtered = contacts.filter(Contact.filter({ phonesOnly: true }));\n            expect(filtered.length).to.equal(1);\n            expect(filtered[0]).to.equal(contacts[3]);\n        });\n        it('rules out by items with no faxes', function () {\n            var filtered = contacts.filter(Contact.filter({ faxesOnly: true }));\n            expect(filtered.length).to.equal(1);\n            expect(filtered[0]).to.equal(contacts[2]);\n        });\n    });\n    describe('comparator', function () {\n        var contacts = [\n            { lastName: 'b' },\n            { firstName: 'b' },\n            { firstName: 'a' }\n        ];\n        it('sorts objects by \"full name\"', function () {\n            var sorted = [].concat(contacts).sort(Contact.comparator());\n            expect(sorted[0]).to.equal(contacts[2]);\n            expect(sorted[1]).to.equal(contacts[0]);\n            expect(sorted[2]).to.equal(contacts[1]);\n        });\n    });\n    describe('validate', function () {\n        it('performs basic validation', function () {\n            var res = Contact.validate({});\n            expect(res.isValid).to.equal(false);\n            expect(res.errors['firstName'][0]).to.be.instanceOf(Error);\n            expect(res.errors['lastName'][0]).to.be.instanceOf(Error);\n            expect(res.errors['email']).to.be.an('undefined');\n            expect(res.errors['email2']).to.be.an('undefined');\n            expect(res.errors['email3']).to.be.an('undefined');\n        });\n        it('performs complex validation', function () {\n            var res = Contact.validate({ email: 'foo', email2: 'bar', email3: 'baz' });\n            expect(res.isValid).to.equal(false);\n            expect(res.errors['firstName'][0]).to.be.instanceOf(Error);\n            expect(res.errors['lastName'][0]).to.be.instanceOf(Error);\n            expect(res.errors['email'][0]).to.be.instanceOf(Error);\n            expect(res.errors['email2'][0]).to.be.instanceOf(Error);\n            expect(res.errors['email3'][0]).to.be.instanceOf(Error);\n        });\n        it('passes validation if values are correct', function () {\n            var res = Contact.validate({\n                email: 'foo@bar.baz',\n                email2: 'foo@bar.baz',\n                email3: 'foo@bar.baz',\n                firstName: 'foo',\n                lastName: 'bar'\n            });\n            expect(res.isValid).to.equal(true);\n            expect(res.errors).to.deep.equal({});\n        });\n        it('passes validation if values are correct', function () {\n            var res = Contact.validate({\n                firstName: 'foo',\n                lastName: 'bar'\n            });\n            expect(res.isValid).to.equal(true);\n            expect(res.errors).to.deep.equal({});\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Contact-spec.ts\n ** module id = 74\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Conferencing', function () {\n    'use strict';\n    var Conferencing = rcsdk.getConferencingHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Conferencing.createUrl()).to.equal('/account/~/extension/~/conferencing');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Conferencing-spec.ts\n ** module id = 75\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Call', function () {\n    'use strict';\n    var Call = rcsdk.getCallHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Call.createUrl()).to.equal('/account/~/extension/~/call-log');\n            expect(Call.createUrl({ personal: true })).to.equal('/account/~/extension/~/call-log');\n            expect(Call.createUrl({ extensionId: '12345' })).to.equal('/account/~/extension/12345/call-log');\n            expect(Call.createUrl({ extensionId: '12345' }, '67890')).to.equal('/account/~/extension/12345/call-log/67890');\n            expect(Call.createUrl({ active: true })).to.equal('/account/~/extension/~/active-calls');\n            expect(Call.createUrl({ active: true, personal: true })).to.equal('/account/~/extension/~/active-calls');\n            expect(Call.createUrl({ active: true }, 'foo')).to.equal('/account/~/extension/~/active-calls/foo');\n            expect(Call.createUrl({\n                active: true,\n                extensionId: 'bar'\n            }, 'foo')).to.equal('/account/~/extension/bar/active-calls/foo');\n        });\n    });\n    describe('attachContacts', function () {\n        it('attaches contacts to all callerInfo structures found in each call', function () {\n            var contacts = [\n                { id: 'foo', homePhone: 'foo' },\n                { id: 'bar', homePhone: 'bar' },\n                { id: 'baz', homePhone: 'baz' }\n            ], calls = [\n                {\n                    direction: 'Outbound',\n                    from: { phoneNumber: 'foo' },\n                    to: { phoneNumber: 'bar' }\n                },\n                {\n                    direction: 'Inbound',\n                    from: { phoneNumber: 'baz' },\n                    to: { phoneNumber: 'notfound' }\n                }\n            ];\n            Call.attachContacts(contacts, calls);\n            expect(calls[0].from.contact).to.equal(contacts[0]);\n            expect(calls[0].to.contact).to.equal(contacts[1]);\n            expect(calls[1].from.contact).to.equal(contacts[2]);\n            expect(calls[1].to.contact).to.be.an('undefined');\n        });\n    });\n    describe('getCallerInfo', function () {\n        var calls = [\n            {\n                direction: 'Outbound',\n                from: { phoneNumber: 'foo' },\n                to: { phoneNumber: 'bar' }\n            },\n            {\n                direction: 'Inbound',\n                from: { phoneNumber: 'baz' },\n                to: { phoneNumber: 'qux' }\n            }\n        ];\n        it('returns callerInfo of from or to properties depending on direction', function () {\n            expect(Call.getCallerInfo(calls[0]).phoneNumber).to.equal('bar');\n            expect(Call.getCallerInfo(calls[1]).phoneNumber).to.equal('baz');\n        });\n        it('returms all callerInfos in an order depending on direction', function () {\n            expect(Call.getAllCallerInfos(calls[0])[0].phoneNumber).to.equal('bar');\n            expect(Call.getAllCallerInfos(calls[0])[1].phoneNumber).to.equal('foo');\n            expect(Call.getAllCallerInfos(calls[1])[0].phoneNumber).to.equal('baz');\n            expect(Call.getAllCallerInfos(calls[1])[1].phoneNumber).to.equal('qux');\n        });\n    });\n    describe('formatDuration', function () {\n        it('formats duration', function () {\n            expect(Call.formatDuration({ duration: 0.5 })).to.equal('00:00');\n            expect(Call.formatDuration({ duration: 0 })).to.equal('00:00');\n            expect(Call.formatDuration({ duration: 1 })).to.equal('00:01');\n            expect(Call.formatDuration({ duration: 1.5 })).to.equal('00:01');\n            expect(Call.formatDuration({ duration: 10 })).to.equal('00:10');\n            expect(Call.formatDuration({ duration: 60 })).to.equal('01:00');\n            expect(Call.formatDuration({ duration: 70 })).to.equal('01:10');\n            expect(Call.formatDuration({ duration: 60 * 60 })).to.equal('1:00:00');\n            expect(Call.formatDuration({ duration: 60 * 60 * 10 + 70 })).to.equal('10:01:10');\n        });\n    });\n    var calls = [\n        { type: 'Voice', direction: 'Inbound', startTime: '2014-08-26T09:46:06.781Z' },\n        { type: 'Voice', direction: 'Outbound', startTime: '2014-08-26T08:46:06.781Z' },\n        { type: 'Voip', direction: 'Inbound', startTime: '2014-08-26T07:46:06.781Z' },\n        { type: 'Voip', direction: 'Outbound', startTime: '2014-08-26T06:46:06.781Z' }\n    ];\n    describe('filter', function () {\n        it('allows to filter calls by type and direction', function () {\n            expect(calls.filter(Call.filter({ type: 'Voice', direction: 'Inbound' })).length).to.equal(1);\n            expect(calls.filter(Call.filter({ type: 'Voice' })).length).to.equal(2);\n            expect(calls.filter(Call.filter({ direction: 'Inbound' })).length).to.equal(2);\n        });\n    });\n    describe('sort', function () {\n        it('allows to sort calls by startTime by default', function () {\n            var sorted = [].concat(calls).sort(Call.comparator());\n            expect(sorted[0]).to.equal(calls[3]);\n            expect(sorted[1]).to.equal(calls[2]);\n            expect(sorted[2]).to.equal(calls[1]);\n            expect(sorted[3]).to.equal(calls[0]);\n        });\n    });\n    var mocks = {\n        initial: {\n            presence: {\n                \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/presence\",\n                \"extension\": {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321\",\n                    \"id\": 62480591,\n                    \"extensionNumber\": \"4166\"\n                },\n                \"presenceStatus\": \"Available\",\n                \"telephonyStatus\": \"NoCall\",\n                \"userStatus\": \"Available\",\n                \"dndStatus\": \"TakeAllCalls\",\n                \"message\": \"Waka waka\",\n                \"allowSeeMyPresence\": true,\n                \"ringOnMonitoredCall\": false,\n                \"pickUpCallsOnHold\": false\n            },\n            activeCalls: [],\n            calls: [\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iTLeNN-expL4g\",\n                    \"id\": \"B0iTLeNN-expL4g\",\n                    \"sessionId\": \"88052061020\",\n                    \"startTime\": \"2014-12-11T00:48:08.000Z\",\n                    \"duration\": 11,\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"Accepted\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                },\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iNkuy10B0FLG0\",\n                    \"id\": \"B0iNkuy10B0FLG0\",\n                    \"sessionId\": \"88051027020\",\n                    \"startTime\": \"2014-12-11T00:40:13.000Z\",\n                    \"duration\": 11,\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"Accepted\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                }\n            ]\n        },\n        ringing: {\n            presence: {\n                \"extensionId\": 62480591,\n                \"telephonyStatus\": \"Ringing\",\n                \"activeCalls\": [\n                    {\n                        \"id\": \"1e8b5e8847924ab49f383bc8d355ee33\",\n                        \"direction\": \"Inbound\",\n                        \"from\": \"1650CALLER0\",\n                        \"to\": \"1855COMPANY\",\n                        \"telephonyStatus\": \"Ringing\",\n                        \"sessionId\": \"88052513020\"\n                    }\n                ],\n                \"sequence\": 7272442\n            },\n            activeCalls: [\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iVoSn2fxQRMMM\",\n                    \"id\": \"B0iVoSn2fxQRMMM\",\n                    \"sessionId\": \"88052513020\",\n                    \"startTime\": \"2014-12-11T00:51:23.000Z\",\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"In Progress\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" },\n                    wayToDetermineOverwrite: true\n                }\n            ],\n            calls: [\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iVoSn2fxQRMMM\",\n                    \"id\": \"B0iVoSn2fxQRMMM\",\n                    \"sessionId\": \"88052513020\",\n                    \"startTime\": \"2014-12-11T00:51:23.000Z\",\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"In Progress\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" },\n                    wayToDetermineItsACall: true\n                },\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iTLeNN-expL4g\",\n                    \"id\": \"B0iTLeNN-expL4g\",\n                    \"sessionId\": \"88052061020\",\n                    \"startTime\": \"2014-12-11T00:48:08.000Z\",\n                    \"duration\": 11,\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"Accepted\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                },\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iNkuy10B0FLG0\",\n                    \"id\": \"B0iNkuy10B0FLG0\",\n                    \"sessionId\": \"88051027020\",\n                    \"startTime\": \"2014-12-11T00:40:13.000Z\",\n                    \"duration\": 11,\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"Accepted\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                }\n            ]\n        },\n        pickup: {\n            presence: {\n                \"extensionId\": 62480591,\n                \"telephonyStatus\": \"CallConnected\",\n                \"activeCalls\": [\n                    {\n                        \"id\": \"1e8b5e8847924ab49f383bc8d355ee33\",\n                        \"direction\": \"Inbound\",\n                        \"from\": \"1650CALLER0\",\n                        \"to\": \"1855COMPANY\",\n                        \"telephonyStatus\": \"CallConnected\",\n                        \"sessionId\": \"88052513020\"\n                    }\n                ],\n                \"sequence\": 7272469\n            },\n            activeCalls: [\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iVoSn2fxQRMMM\",\n                    \"id\": \"B0iVoSn2fxQRMMM\",\n                    \"sessionId\": \"88052513020\",\n                    \"startTime\": \"2014-12-11T00:51:23.000Z\",\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"In Progress\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                }\n            ],\n            calls: [\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iVoSn2fxQRMMM\",\n                    \"id\": \"B0iVoSn2fxQRMMM\",\n                    \"sessionId\": \"88052513020\",\n                    \"startTime\": \"2014-12-11T00:51:23.000Z\",\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"In Progress\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                },\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iTLeNN-expL4g\",\n                    \"id\": \"B0iTLeNN-expL4g\",\n                    \"sessionId\": \"88052061020\",\n                    \"startTime\": \"2014-12-11T00:48:08.000Z\",\n                    \"duration\": 11,\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"Accepted\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                },\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iNkuy10B0FLG0\",\n                    \"id\": \"B0iNkuy10B0FLG0\",\n                    \"sessionId\": \"88051027020\",\n                    \"startTime\": \"2014-12-11T00:40:13.000Z\",\n                    \"duration\": 11,\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"Accepted\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                }\n            ]\n        },\n        hangup: {\n            presence: {\n                \"extensionId\": 62480591,\n                \"telephonyStatus\": \"NoCall\",\n                \"activeCalls\": [\n                    {\n                        \"id\": \"1e8b5e8847924ab49f383bc8d355ee33\",\n                        \"direction\": \"Inbound\",\n                        \"from\": \"1650CALLER0\",\n                        \"to\": \"1855COMPANY\",\n                        \"telephonyStatus\": \"NoCall\",\n                        \"sessionId\": \"88052513020\"\n                    }\n                ],\n                \"sequence\": 7272495\n            },\n            activeCalls: [],\n            calls: [\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iVoSn2fxQRMMQ\",\n                    \"id\": \"B0iVoSn2fxQRMMQ\",\n                    \"sessionId\": \"88052513020\",\n                    \"startTime\": \"2014-12-11T00:51:24.000Z\",\n                    \"duration\": 42,\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"Accepted\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                },\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iTLeNN-expL4g\",\n                    \"id\": \"B0iTLeNN-expL4g\",\n                    \"sessionId\": \"88052061020\",\n                    \"startTime\": \"2014-12-11T00:48:08.000Z\",\n                    \"duration\": 11,\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"Accepted\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                },\n                {\n                    \"uri\": \"https://api.ringcentral.com/restapi/v1.0/account/123/extension/321/call-log/B0iNkuy10B0FLG0\",\n                    \"id\": \"B0iNkuy10B0FLG0\",\n                    \"sessionId\": \"88051027020\",\n                    \"startTime\": \"2014-12-11T00:40:13.000Z\",\n                    \"duration\": 11,\n                    \"type\": \"Voice\",\n                    \"direction\": \"Inbound\",\n                    \"action\": \"Phone Call\",\n                    \"result\": \"Accepted\",\n                    \"to\": { \"phoneNumber\": \"1855COMPANY\", \"name\": \"Called Ext Name\" },\n                    \"from\": { \"phoneNumber\": \"1650CALLER0\", \"name\": \"Called Ext Name\", \"location\": \"San Mateo, CA\" }\n                }\n            ]\n        }\n    };\n    describe('mergePresenceCalls', function () {\n        it('merges known presence calls', function (done) {\n            var presenceCalls = [];\n            presenceCalls = Call.mergePresenceCalls(presenceCalls, mocks.initial.presence);\n            presenceCalls = Call.mergePresenceCalls(presenceCalls, mocks.ringing.presence);\n            expect(presenceCalls.length).to.equal(1);\n            expect(presenceCalls[0].startTime).to.not.equal('');\n            expect(presenceCalls[0].result).to.equal('In Progress');\n            var oldTime = presenceCalls[0].startTime;\n            setTimeout(function () {\n                presenceCalls = Call.mergePresenceCalls(presenceCalls, mocks.pickup.presence);\n                expect(presenceCalls.length).to.equal(1);\n                expect(presenceCalls[0].startTime).to.equal(oldTime);\n                done();\n            }, 10);\n        });\n        it('sets appropriate statuses', function (done) {\n            var presenceCalls = Call.mergePresenceCalls([], mocks.initial.presence);\n            presenceCalls = Call.mergePresenceCalls(presenceCalls, mocks.ringing.presence);\n            expect(presenceCalls[0].result).to.equal('In Progress');\n            expect(presenceCalls[0].telephonyStatus).to.equal('Ringing');\n            setTimeout(function () {\n                presenceCalls = Call.mergePresenceCalls(presenceCalls, mocks.pickup.presence);\n                expect(presenceCalls[0].result).to.equal('In Progress');\n                expect(presenceCalls[0].telephonyStatus).to.equal('CallConnected');\n            }, 10);\n            setTimeout(function () {\n                presenceCalls = Call.mergePresenceCalls(presenceCalls, mocks.hangup.presence);\n                expect(presenceCalls[0].result).to.equal('NoCall');\n                expect(presenceCalls[0].telephonyStatus).to.equal('NoCall');\n                done();\n            }, 20);\n        });\n    });\n    describe('mergeAll', function () {\n        it('merges together calls from presence, active calls, calls', function () {\n            var presenceCalls = Call.mergePresenceCalls([], mocks.ringing.presence), allCalls = Call.mergeAll(presenceCalls, mocks.ringing.calls, mocks.ringing.activeCalls)\n                .sort(Call.comparator())\n                .reverse();\n            expect(allCalls.length).to.equal(3);\n            expect(allCalls[0].result).to.equal('In Progress');\n            expect(allCalls[0].wayToDetermineItsACall).to.equal(true);\n            expect(allCalls[0].wayToDetermineOverwrite).to.equal(true);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Call-spec.ts\n ** module id = 76\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.BlockedNumber', function () {\n    'use strict';\n    var BlockedNumber = rcsdk.getBlockedNumberHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(BlockedNumber.createUrl()).to.equal('/account/~/extension/~/blocked-number');\n            expect(BlockedNumber.createUrl({ extensionId: 'foo' })).to.equal('/account/~/extension/foo/blocked-number');\n            expect(BlockedNumber.createUrl({ extensionId: 'foo' }, 'bar')).to.equal('/account/~/extension/foo/blocked-number/bar');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/BlockedNumber-spec.ts\n ** module id = 77\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.helpers.Account', function () {\n    'use strict';\n    var Account = rcsdk.getAccountHelper();\n    describe('createUrl', function () {\n        it('returns URL depending on options', function () {\n            expect(Account.createUrl()).to.equal('/account/~');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Account-spec.ts\n ** module id = 78\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.core.Validator', function () {\n    var Validator = rcsdk.getValidator();\n    describe('length', function () {\n        function lengthValidator(description, max, min, valueToTest, expectedValidationResult) {\n            it(description, function () {\n                var result = Validator.validate([{ field: 'foo', validator: Validator.length(valueToTest, max, min) }]);\n                expect(result.isValid).to.equal(expectedValidationResult);\n            });\n        }\n        describe('positive tests', function () {\n            lengthValidator('should validate a length that is equal to the max length', 9, 2, '123456789', true);\n            lengthValidator('should validate a length that is equal to the min length', 9, 2, '12', true);\n            lengthValidator('should validate a length that is between the max and min length', 9, 2, '12345', true);\n            lengthValidator('should treat a falsey max as meaning there is no max length', null, 2, '123456789abcdef', true);\n            lengthValidator('should treat a falsey min as meaning there is no min length', 9, null, '', true);\n        });\n        describe('negative tests', function () {\n            lengthValidator('should not validate a length that is above the max length', 5, 4, '123456', false);\n            lengthValidator('should not validate a length that is below the min length', 5, 4, '123', false);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Validator-spec.ts\n ** module id = 79\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.core.Utils', function () {\n    'use strict';\n    var Utils = rcsdk.getUtils();\n    describe('parseQueryString & queryStringify', function () {\n        it('parses queryStrings', function () {\n            expect(Utils.parseQueryString('foo=bar&bar=baz')).to.deep.equal({ foo: 'bar', bar: 'baz' });\n            expect(Utils.parseQueryString('foo=bar&foo=baz')).to.deep.equal({ foo: ['bar', 'baz'] });\n            expect(Utils.parseQueryString('foo')).to.deep.equal({ foo: true });\n        });\n        it('builds queryStrings', function () {\n            expect(Utils.queryStringify({ foo: 'bar', bar: 'baz' })).to.equal('foo=bar&bar=baz');\n            expect(Utils.queryStringify({ foo: ['bar', 'baz'] })).to.equal('foo=bar&foo=baz');\n        });\n        it('decodes pre-encoded string representation of object to be equal to original object', function () {\n            function encodeDecode(v) {\n                return Utils.parseQueryString(Utils.queryStringify(v));\n            }\n            var simple = { foo: 'bar' }, array = { foo: ['bar', 'baz'] };\n            expect(encodeDecode(simple)).to.deep.equal(simple);\n            expect(encodeDecode(array)).to.deep.equal(array);\n        });\n    });\n    describe('extend', function () {\n        it('applies properties of sources to target (only first level)', function () {\n            var target = {\n                foo: {\n                    id: 0,\n                    name: 'name'\n                }\n            }, source1 = {\n                foo: {\n                    id: 1\n                },\n                bar: {\n                    id: 1\n                }\n            }, source2 = {\n                foo: {\n                    id: 2\n                }\n            }, result = Utils.extend(target, source1, source2);\n            // make sure result is target\n            expect(result).to.equal(target);\n            // make sure source2 has overrided source1 and target\n            expect(result.foo.id).to.equal(2);\n            expect(result.foo.name).to.be.an('undefined');\n            // make sure other properties of source 1 are copied\n            expect(result.bar.id).to.equal(1);\n        });\n        it('applies all properties of sources to target in deep mode', function () {\n            var target = {\n                foo: {\n                    id: 0,\n                    name: 'name'\n                }\n            }, source1 = {\n                foo: {\n                    id: 1\n                },\n                bar: {\n                    id: 1\n                }\n            }, source2 = {\n                foo: {\n                    id: 2\n                }\n            }, result = Utils.extend(true, target, source1, source2);\n            // make sure result is target\n            expect(result).to.equal(target);\n            // make sure original target properties that does not exist in sources are still available\n            expect(result.foo.name).to.equal('name');\n            // make sure source2 has overrided source1 and target\n            expect(result.foo.id).to.equal(2);\n            // make sure other properties of source 1 are copied\n            expect(result.bar.id).to.equal(1);\n        });\n        it('copies all kinds of values', function () {\n            var target = {\n                'array': []\n            }, source = {\n                'object': {\n                    bar: {\n                        baz: 'baz'\n                    }\n                },\n                'null': null,\n                'array': [1, 2, 3],\n                'date': new Date(),\n                'string': 'string'\n            };\n            Utils.extend(true, target, source);\n            // Deep equality\n            expect(target).to.deep.equal(source);\n            // Dates are linked\n            expect(target.date).to.equal(source.date);\n            // Arrays are cloned\n            expect(target.array).not.to.equal(source.array);\n        });\n    });\n    describe('poll & stopPolling', function () {\n        it('allows to set custom delay', function (done) {\n            Utils.poll(function (next, delay) {\n                expect(delay).to.equal(10);\n                done();\n            }, 10);\n        });\n        it('provides a method to do it continuously', function (done) {\n            var i = 0;\n            Utils.poll(function (next) {\n                i++;\n                if (i < 3)\n                    next();\n                else\n                    done();\n            }, 1);\n            after(function () {\n                expect(i).to.equal(3);\n            });\n        });\n        it('provides a method stop', function (done) {\n            var timeout = Utils.poll(function (next) {\n                done(new Error('This should never be reached'));\n            }, 10);\n            Utils.stopPolling(timeout);\n            done();\n        });\n        it('cancels a previous timeout if provided', function (done) {\n            var timeout = Utils.poll(function (next) {\n                done(new Error('This should never be reached'));\n            }, 10);\n            var timeout2 = Utils.poll(function (next) {\n                done();\n            }, 10, timeout);\n        });\n    });\n    describe('parseNumber', function () {\n        it('extracts object itself as number if no options given', function () {\n            expect(Utils.parseNumber(1)).to.equal(1);\n            expect(Utils.parseNumber('1')).to.equal(1);\n            expect(Utils.parseNumber('0')).to.equal(0);\n            expect(Utils.parseNumber([])).to.equal(0);\n            expect(Utils.parseNumber([1])).to.equal(1);\n            expect(Utils.parseNumber([1, 1])).to.equal(1);\n            expect(Utils.parseNumber('not-a-number')).to.equal(0);\n            expect(Utils.parseNumber(null)).to.equal(0);\n        });\n    });\n    describe('stringExtractor', function () {\n        it('extracts object itself as string if no options given', function () {\n            expect(Utils.parseString(1)).to.equal('1');\n            expect(Utils.parseString(0)).to.equal('');\n            expect(Utils.parseString([])).to.equal('');\n            expect(Utils.parseString([1, 2])).to.equal('1,2');\n            expect(Utils.parseString(null)).to.equal('');\n            expect(Utils.parseString({})).to.equal('[object Object]');\n        });\n    });\n    describe('isEmail', function () {\n        function emailValidator(description, multiple, valueToTest, expectedValidationResult) {\n            it(description, function () {\n                expect(Utils.isEmail(valueToTest, multiple)).to.equal(expectedValidationResult);\n            });\n        }\n        describe('positive tests', function () {\n            emailValidator('should validate simple addresses', false, 'foo@bar.com', true);\n            emailValidator('should validate addresses with digits', false, '123@456.789', true);\n            emailValidator('should validate addresses with special characters', false, '!#$%&\\'*+/=?^_`{|}~-@qux.com', true);\n            emailValidator('should validate addresses with multiple host segments', false, 'foo@bar.baz.qux.com', true);\n            emailValidator('should validate multiple addresses when true is specified for the multiple constructor argument', true, 'foo@bar.com; baz@qux.com', true);\n        });\n        describe('negative tests', function () {\n            emailValidator('should not validate addresses with multiple @ symbols', false, 'foo@bar@baz.com', false);\n            emailValidator('should not validate addresses with invalid characters', false, 'foo bar@baz.com', false);\n            emailValidator('should not validate addresses with malformed host segment', false, 'foo@bar.baz.', false);\n            emailValidator('should not validate addresses with missing host segment', false, 'foo@', false);\n            emailValidator('should not validate multiple addresses when false is specified for the multiple constructor argument', false, 'foo@bar.com; baz@qux.com', false);\n        });\n    });\n    describe('isPhone', function () {\n        function phoneValidator(description, valueToTest, expectedValidationResult) {\n            it(description, function () {\n                expect(Utils.isPhoneNumber(valueToTest)).to.equal(expectedValidationResult);\n            });\n        }\n        describe('positive tests', function () {\n            phoneValidator('should validate a phone number with no formatting characters', '16501234567', true);\n            phoneValidator('should validate a phone number with typical formatting characters', '1 (650) 123-4567', true);\n            phoneValidator('should validate a phone number with periods as digit separators', '1.650.123.4567', true);\n            phoneValidator('should validate a phone number with optional + prefix', '+1 650 123 4567', true);\n            phoneValidator('should validate a vanity phone number', '+1 800 FOR HELP', true);\n        });\n        describe('negative tests', function () {\n            phoneValidator('should not validate a phone number that is missing the country code', '(650) 123-4567', false);\n            phoneValidator('should not validate a phone number that has too few digits', '1 (650) 123-456', false);\n            phoneValidator('should not validate a phone number with letters in area code', '+1 FOO FOR HELP', false);\n        });\n    });\n    describe('is*', function () {\n        describe('isDate', function () {\n            expect(Utils.isDate(new Date())).to.equal(true);\n        });\n        describe('isFunction', function () {\n            expect(Utils.isFunction(Date)).to.equal(true);\n            expect(Utils.isFunction(function () { })).to.equal(true);\n        });\n        describe('isArray', function () {\n            expect(Utils.isArray([])).to.equal(true);\n        });\n        describe('isNaN', function () {\n            expect(Utils.isNaN(NaN)).to.equal(true);\n        });\n    });\n    describe('getProperty', function () {\n        it('returns a nested property', function () {\n            var foo = {\n                bar: {\n                    baz: 'qux'\n                },\n                arr: ['zero', 'one', 'two', { foo: 'bar' }]\n            };\n            expect(Utils.getProperty(foo, 'bar.baz')).to.equal('qux');\n            expect(Utils.getProperty(foo, 'arr[0]')).to.equal('zero');\n            expect(Utils.getProperty(foo, 'arr[1]')).to.equal('one');\n            expect(Utils.getProperty(foo, 'arr[3].foo')).to.equal('bar');\n            expect(Utils.getProperty(foo, 'nonexistent')).to.equal(undefined);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Utils-spec.ts\n ** module id = 80\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.core.Subscription', function () {\n    mock.registerHooks(this);\n    describe('subscribe', function () {\n        it('automatically renews subscription', function (done) {\n            mock.subscribeGeneric(60);\n            var subscription = rcsdk.getSubscription();\n            subscription.on(subscription.events.renewSuccess, function () {\n                subscription.destroy(); // prevent next renewals\n                done();\n            });\n            subscription\n                .register({\n                events: ['foo', 'bar']\n            })\n                .then(function (ajax) {\n                expect(ajax.data.expiresIn).to.equal(60);\n            })\n                .catch(done);\n        });\n    });\n    describe.skip('destroy', function () { });\n    describe('notify method', function () {\n        it('fires a notification event when the notify method is called and passes the message object', function (done) {\n            var subscription = rcsdk.getSubscription();\n            subscription.on(subscription.events.notification, function (event) {\n                expect(event).to.deep.equal({ foo: 'bar' });\n                done();\n            });\n            subscription.notify({ foo: 'bar' });\n        });\n    });\n    describe('renew', function () {\n        it('fails when no subscription', function (done) {\n            var subscription = rcsdk.getSubscription();\n            subscription\n                .renew()\n                .then(function () {\n                done(new Error('This should not be reached'));\n            })\n                .catch(function (e) {\n                expect(e.message).to.equal('Subscription ID is required');\n                done();\n            });\n        });\n        it('fails when no eventFilters', function (done) {\n            var subscription = rcsdk.getSubscription();\n            subscription.subscription = { id: 'foo' };\n            subscription\n                .renew()\n                .then(function () {\n                done(new Error('This should not be reached'));\n            })\n                .catch(function (e) {\n                expect(e.message).to.equal('Events are undefined');\n                done();\n            });\n        });\n    });\n    describe('subscribe', function () {\n        it('fails when no eventFilters', function (done) {\n            var subscription = rcsdk.getSubscription();\n            subscription\n                .subscribe()\n                .then(function () {\n                done(new Error('This should not be reached'));\n            })\n                .catch(function (e) {\n                expect(e.message).to.equal('Events are undefined');\n                done();\n            });\n        });\n        it('calls the success callback and passes the subscription provided from the platform', function (done) {\n            var event = 'foo';\n            var subscription = rcsdk.getSubscription();\n            mock.subscribeGeneric();\n            subscription\n                .subscribe({\n                events: [event]\n            })\n                .then(function () {\n                expect(subscription.subscription.eventFilters.length).to.equal(1);\n                done();\n            })\n                .catch(done);\n        });\n        it('calls the error callback and passes the error provided from the platform', function (done) {\n            rcsdk.getXhrResponse().add({\n                path: '/restapi/v1.0/subscription',\n                /**\n                 * @param {XhrMock} transport\n                 * @returns {Object}\n                 */\n                response: function (transport) {\n                    transport.setStatus(400);\n                    return {\n                        'message': 'Subscription failed'\n                    };\n                }\n            });\n            var subscription = rcsdk.getSubscription();\n            subscription\n                .subscribe({\n                events: ['foo']\n            })\n                .then(function () {\n                done(new Error('This should never be reached'));\n            })\n                .catch(function (e) {\n                expect(e.message).to.equal('Subscription failed');\n                expect(e).to.be.an.instanceOf(Error);\n                done();\n            });\n        });\n    });\n    describe('decrypt method', function () {\n        it('provides access to PUBNUB.crypto_obj which has proper interface', function () {\n            var subscription = rcsdk.getSubscription();\n            expect(subscription.getPubnub().crypto_obj).to.be.an('object');\n            expect(subscription.getPubnub().crypto_obj.encrypt).to.be.a('function');\n            expect(subscription.getPubnub().crypto_obj.decrypt).to.be.a('function');\n        });\n        it('decrypts AES-encrypted messages when the subscription has an encryption key', function () {\n            var aesMessage = 'gkw8EU4G1SDVa2/hrlv6+0ViIxB7N1i1z5MU/Hu2xkIKzH6yQzhr3vIc27IAN558kTOkacqE5DkLpRdnN1orwtI' +\n                'BsUHmPMkMWTOLDzVr6eRk+2Gcj2Wft7ZKrCD+FCXlKYIoa98tUD2xvoYnRwxiE2QaNywl8UtjaqpTk1+WDImBrt' +\n                '6uabB1WICY/qE0It3DqQ6vdUWISoTfjb+vT5h9kfZxWYUP4ykN2UtUW1biqCjj1Rb6GWGnTx6jPqF77ud0XgV1r' +\n                'k/Q6heSFZWV/GP23/iytDPK1HGJoJqXPx7ErQU=', subscription = rcsdk.getSubscription();\n            subscription.subscription = {\n                deliveryMode: {\n                    encryptionKey: 'e0bMTqmumPfFUbwzppkSbA==',\n                    subscriberKey: 'foo',\n                    address: 'foo'\n                }\n            };\n            expect(subscription.decrypt(aesMessage)).to.deep.equal({\n                \"timestamp\": \"2014-03-12T20:47:54.712+0000\",\n                \"body\": {\n                    \"extensionId\": 402853446008,\n                    \"telephonyStatus\": \"OnHold\"\n                },\n                \"event\": \"/restapi/v1.0/account/~/extension/402853446008/presence\",\n                \"uuid\": \"db01e7de-5f3c-4ee5-ab72-f8bd3b77e308\"\n            });\n        });\n    });\n    describe('destroy', function () {\n        it('unsubscribes', function (done) {\n            var subscription = rcsdk.getSubscription(), destroySpy = spy(function () { });\n            mock.subscribeGeneric();\n            subscription\n                .subscribe({\n                events: ['foo']\n            })\n                .then(function () {\n                expect(subscription.subscription).not.to.equal(null);\n                subscription.pubnub.unsubscribe = destroySpy;\n                subscription.destroy();\n                expect(destroySpy).to.be.calledOnce;\n                done();\n            }).catch(done);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Subscription-spec.ts\n ** module id = 81\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.core.Platform', function () {\n    var platform = rcsdk.getPlatform(), releaseTimeout = platform.releaseTimeout, pollInterval = platform.pollInterval;\n    afterEach(function () {\n        platform.releaseTimeout = releaseTimeout;\n        platform.pollInterval = pollInterval;\n    });\n    mock.registerHooks(this);\n    describe('setCredentials', function () {\n        it('should have predefined apiKey', function () {\n            expect(platform.apiKey).to.equal('d2hhdGV2ZXI6d2hhdGV2ZXI='); // whatever:whatever\n        });\n    });\n    describe('setServer', function () {\n        it('should have predefined server', function () {\n            expect(platform.server).to.equal('http://whatever');\n        });\n    });\n    describe('isTokenValid', function () {\n        it('is not authenticated when token has expired', function () {\n            platform.cancelAccessToken();\n            expect(platform.isTokenValid()).to.equal(false);\n        });\n        it('is not authenticated after logout', function (done) {\n            platform.logout().then(function () {\n                expect(platform.isTokenValid()).to.equal(false);\n                done();\n            }, done);\n        });\n        it('is not authenticated if paused', function () {\n            platform.pause();\n            expect(platform.isTokenValid()).to.equal(false);\n            platform.resume();\n        });\n    });\n    describe('isAuthorized', function () {\n        it('initiates refresh if not authorized', function (done) {\n            mock.tokenRefresh();\n            expect(platform.getToken()).to.not.equal('ACCESS_TOKEN_FROM_REFRESH');\n            platform\n                .cancelAccessToken()\n                .isAuthorized()\n                .then(function () {\n                expect(platform.getToken()).to.equal('ACCESS_TOKEN_FROM_REFRESH');\n                done();\n            })\n                .catch(done);\n        });\n        it('waits for refresh to resolve from other tab', function (done) {\n            var token = 'ACCESS_TOKEN_FROM_OTHER_TAB';\n            expect(platform.getToken()).to.not.equal(token);\n            platform\n                .pause()\n                .cancelAccessToken()\n                .isAuthorized()\n                .then(function () {\n                expect(platform.getToken()).to.equal(token);\n                done();\n            })\n                .catch(done);\n            setTimeout(function () {\n                platform.setCache({\n                    access_token: token,\n                    expires_in: 60 * 60 // 1 hour\n                });\n                platform.resume();\n            }, 10);\n        });\n        it('produces error if refresh did not happen', function (done) {\n            platform.releaseTimeout = 20;\n            platform.pollInterval = 10;\n            platform\n                .pause()\n                .cancelAccessToken()\n                .isAuthorized()\n                .then(function () {\n                done(new Error('This should not be reached'));\n            })\n                .catch(function (e) {\n                expect(e.message).to.equal('Automatic authentification timeout');\n                done();\n            });\n        });\n    });\n    describe('apiCall', function () {\n        it('refreshes token when token was expired', function (done) {\n            var path = '/restapi/xxx', refreshSpy = spy(function () { });\n            mock.tokenRefresh();\n            mock.apiCall(path, {});\n            expect(platform.getToken()).to.not.equal('ACCESS_TOKEN_FROM_REFRESH');\n            platform\n                .cancelAccessToken()\n                .on(platform.events.refreshSuccess, refreshSpy)\n                .apiCall({\n                url: path\n            }).then(function (ajax) {\n                expect(refreshSpy).to.be.calledOnce;\n                expect(platform.getToken()).to.equal('ACCESS_TOKEN_FROM_REFRESH');\n                done();\n            }).catch(done);\n        });\n        it('tries to refresh the token if Platform returns 401 Unauthorized and re-executes the request', function (done) {\n            var path = '/restapi/xxx', refreshSpy = spy(function () { }), count = 0, response = { foo: 'bar' }, responseSpy = spy(function (ajax) {\n                count++;\n                ajax.setStatus(count == 1 ? 401 : 200);\n                return count == 1 ? {} : response;\n            });\n            mock.tokenRefresh();\n            rcsdk.getXhrResponse().add({\n                path: path,\n                response: responseSpy\n            });\n            platform\n                .on(platform.events.refreshSuccess, refreshSpy)\n                .apiCall({\n                url: path\n            }).then(function (ajax) {\n                expect(refreshSpy).to.be.calledOnce;\n                expect(responseSpy).to.be.calledTwice;\n                expect(ajax.data).to.deep.equal(response);\n                expect(platform.getToken()).to.equal('ACCESS_TOKEN_FROM_REFRESH');\n                done();\n            }).catch(done);\n        });\n        it('fails if ajax has status other than 2xx', function (done) {\n            var path = '/restapi/xxx';\n            rcsdk.getXhrResponse().add({\n                path: path,\n                response: function (ajax) {\n                    ajax.setStatus(400);\n                    return { description: 'Fail' };\n                }\n            });\n            platform\n                .apiCall({\n                url: path\n            }).then(function (ajax) {\n                done(new Error('This should not be reached'));\n            }).catch(function (e) {\n                expect(e.message).to.equal('Fail');\n                done();\n            });\n        });\n    });\n    describe('refresh', function () {\n        it('handles error in queued AJAX after unsuccessful refresh when token is killed', function (done) {\n            var path = '/restapi/xxx', successSpy = spy(function () { }), errorSpy = spy(function () { });\n            mock.tokenRefresh(true);\n            mock.apiCall(path, {});\n            platform\n                .cancelAccessToken()\n                .on(platform.events.refreshSuccess, successSpy)\n                .on(platform.events.refreshError, errorSpy)\n                .apiCall({\n                url: path\n            })\n                .then(function () {\n                done(new Error('This should never be called'));\n            })\n                .catch(function (e) {\n                expect(e.message).to.equal('Wrong token');\n                expect(errorSpy).to.be.calledOnce;\n                expect(successSpy).not.to.calledOnce;\n                done();\n            });\n        });\n        it('sits and waits for the queue to be released, no matter how many pending refreshes there are', function (done) {\n            platform.pause();\n            rcsdk.getContext().getPromise()\n                .all([\n                platform.refresh(),\n                platform.refresh(),\n                platform.refresh()\n            ])\n                .then(function () {\n                done();\n            })\n                .catch(function (e) {\n                done(e);\n            });\n            setTimeout(function () {\n                platform.resume();\n            }, 5);\n        });\n        it('handles subsequent refreshes', function (done) {\n            mock.tokenRefresh();\n            platform.refresh()\n                .then(function () {\n                return platform.refresh();\n            })\n                .then(function () {\n                return rcsdk.getContext().getPromise()\n                    .all([\n                    platform.refresh(),\n                    platform.refresh()\n                ]);\n            })\n                .then(function () {\n                done();\n            })\n                .catch(function (e) {\n                done(e);\n            });\n        });\n        it('returns error if response is malformed', function (done) {\n            rcsdk.getXhrResponse().add({\n                path: '/restapi/oauth/token',\n                /**\n                 * @param {XhrMock} ajax\n                 * @returns {Object}\n                 */\n                response: function (ajax) {\n                    ajax.setStatus(240); // This weird status were caught on client's machine\n                    return {\n                        'message': 'Wrong token',\n                        'error_description': 'Wrong token',\n                        'description': 'Wrong token'\n                    };\n                }\n            });\n            platform.cancelAccessToken().refresh().then(function () {\n                done(new Error('This should not be reached'));\n            }).catch(function (e) {\n                expect(e.message).to.equal('Malformed OAuth response');\n                expect(e.ajax.data.message).to.equal('Wrong token');\n                done();\n            });\n        });\n        it('issues only one refresh request', function (done) {\n            var Promise = rcsdk.getContext().getPromise();\n            var spy1 = spy(function (ajax) {\n                return new Promise(function (resolve, reject) {\n                    setTimeout(function () {\n                        resolve({\n                            'access_token': 'ACCESS_TOKEN_FROM_REFRESH',\n                            'token_type': 'bearer',\n                            'expires_in': 3600,\n                            'refresh_token': 'REFRESH_TOKEN_FROM_REFRESH',\n                            'refresh_token_expires_in': 60480,\n                            'scope': 'SMS RCM Foo Boo',\n                            'expireTime': new Date().getTime() + 3600000\n                        });\n                    }, 50);\n                });\n            });\n            var increment = 0;\n            var spy2 = spy(function (ajax) {\n                return {\n                    increment: ++increment,\n                    constant: 1\n                };\n            });\n            rcsdk.getXhrResponse().add({\n                path: '/restapi/oauth/token',\n                /**\n                 * @param {XhrMock} ajax\n                 * @returns {Object}\n                 */\n                response: spy1\n            });\n            rcsdk.getXhrResponse().add({\n                path: '/restapi/v1.0/foo',\n                /**\n                 * @param {XhrMock} ajax\n                 * @returns {Object}\n                 */\n                response: spy2\n            });\n            platform.cancelAccessToken();\n            Promise\n                .all([\n                platform.apiCall({ url: '/foo' }),\n                platform.apiCall({ url: '/foo' }),\n                platform.apiCall({ url: '/foo' })\n            ])\n                .then(function (res) {\n                expect(res[0].data.increment).to.equal(1);\n                expect(res[1].data.increment).to.equal(2);\n                expect(res[2].data.increment).to.equal(3);\n                expect(res[0].data.constant).to.equal(res[1].data.constant);\n                expect(spy1).to.be.calledOnce;\n                expect(spy2).to.be.calledThrice;\n                done();\n            })\n                .catch(done);\n        });\n        it('immediately (synchronously) pauses', function (done) {\n            mock.tokenRefresh();\n            var refresh = platform.refresh();\n            expect(platform.isPaused()).to.equal(true);\n            refresh\n                .then(function () {\n                done();\n            })\n                .catch(function (e) {\n                done(e);\n            });\n        });\n        it('throws error if queue was unpaused before refresh call', function (done) {\n            mock.tokenRefresh();\n            var refresh = platform.refresh();\n            platform.resume();\n            refresh\n                .then(function () {\n                done(new Error('This should not be reached'));\n            })\n                .catch(function (e) {\n                expect(e.message).to.equal('Queue was resumed before refresh call');\n                done();\n            });\n        });\n    });\n    describe('refreshPolling', function () {\n        beforeEach(function () {\n            platform.releaseTimeout = 20;\n            platform.pollInterval = 10;\n        });\n        it('polls the status of semaphor and resumes operation', function (done) {\n            platform\n                .pause()\n                .refreshPolling(null)\n                .then(function () {\n                done();\n            })\n                .catch(done);\n            setTimeout(function () {\n                platform.resume();\n            }, 10);\n        });\n        it('resolves with error if token is not valid after releaseTimeout', function (done) {\n            platform\n                .pause() // resume() will not be called in this test\n                .cancelAccessToken()\n                .refreshPolling(null)\n                .then(function () {\n                done(new Error('This should not be reached'));\n            })\n                .catch(function (e) {\n                expect(e.message).to.equal('Automatic authentification timeout');\n                done();\n            });\n        });\n    });\n    describe('get, post, put, delete', function () {\n        it('sends request using appropriate method', function (done) {\n            function test(method) {\n                var path = '/foo/' + method;\n                rcsdk.getXhrResponse().add({\n                    path: path,\n                    response: function (ajax) {\n                        expect(ajax.method).to.equal(method.toUpperCase());\n                        return { foo: 'bar' };\n                    }\n                });\n                return platform[method](path).then(function (res) {\n                    expect(res.data.foo).to.equal('bar');\n                    return res;\n                });\n            }\n            rcsdk.getContext().getPromise().all([\n                test('get'),\n                test('post'),\n                test('put'),\n                test('delete')\n            ]).then(function () {\n                done();\n            }).catch(done);\n        });\n    });\n    //TODO Add tests for this\n    describe.skip('parseAuthRedirectUrl', function () { });\n    describe.skip('getAuthURL', function () { });\n    describe.skip('getCredentials', function () { });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Platform-spec.ts\n ** module id = 82\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.core.Observable', function () {\n    describe('Regular events', function () {\n        it('binds and fires events', function () {\n            var o = rcsdk.getObservable(), a = 0;\n            o.on('event', function () {\n                a++;\n            });\n            o.emit('event');\n            expect(a).to.be.equal(1);\n            o.emit('event');\n            expect(a).to.be.equal(2);\n        });\n        it('binds and unbinds events', function () {\n            var o = rcsdk.getObservable(), a = 0, c = function () {\n                a++;\n            };\n            o.on('event', c);\n            o.off('event', c);\n            o.emit('event');\n            expect(a).to.be.equal(0);\n        });\n        it('don\\'t share events', function () {\n            var o1 = rcsdk.getObservable(), o2 = rcsdk.getObservable(), a = 0, c = function () {\n                a++;\n            };\n            o1.on('event', c);\n            o2.on('event', c);\n            o1.emit('event');\n            o2.emit('event');\n            expect(a).to.be.equal(2);\n        });\n        it('executes event and then callback when emitAndCallback() is called', function () {\n            var o = rcsdk.getObservable(), r = '';\n            o.on('event', function (a, b) {\n                r += '1-' + a + '-' + b;\n            });\n            o.emitAndCallback('event', [2, 3], function () {\n                r += '-4';\n            });\n            expect(r).to.equal('1-2-3-4');\n        });\n    });\n    describe('Disposable events', function () {\n        it('executes callback immediately if event has been fired before', function () {\n            var o = rcsdk.getObservable(), a = 0;\n            o.registerOneTimeEvent('event');\n            o.on('event', function () {\n                a++;\n            });\n            o.emit('event');\n            expect(a).to.be.equal(1);\n            o.on('event', function () { a++; });\n            expect(a).to.be.equal(2);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Observable-spec.ts\n ** module id = 83\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.core.Log', function () {\n    var log = rcsdk.getLog();\n    describe('Interface', function () {\n        it('Enables and disables all', function () {\n            var originalConsole = console;\n            var c = log.console = {\n                log: spy(function () { }),\n                info: spy(function () { }),\n                warn: spy(function () { }),\n                error: spy(function () { })\n            };\n            log.enableAll();\n            expect(log.logDebug).to.equal(true);\n            expect(log.logInfo).to.equal(true);\n            expect(log.logWarnings).to.equal(true);\n            expect(log.logErrors).to.equal(true);\n            log.debug('foo');\n            log.info('foo');\n            log.warn('foo');\n            log.error('foo');\n            log.disableAll();\n            expect(log.logDebug).to.equal(false);\n            expect(log.logInfo).to.equal(false);\n            expect(log.logWarnings).to.equal(false);\n            expect(log.logErrors).to.equal(false);\n            log.debug('foo');\n            log.info('foo');\n            log.warn('foo');\n            log.error('foo');\n            expect(c.log).to.be.calledOnce;\n            expect(c.info).to.be.calledOnce;\n            expect(c.warn).to.be.calledOnce;\n            expect(c.error).to.be.calledOnce;\n            log.console = originalConsole;\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Log-spec.ts\n ** module id = 84\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.core.List', function () {\n    'use strict';\n    var List = rcsdk.getList();\n    describe('stringComparator', function () {\n        it('compares values as strings', function () {\n            // numbers with different amount of digits\n            expect(List.stringComparator('12', '2')).to.equal(-1);\n            expect(List.stringComparator('2', '12')).to.equal(1);\n            // numbers with same amount of digits\n            expect(List.stringComparator('1', '2')).to.equal(-1);\n            expect(List.stringComparator('2', '1')).to.equal(1);\n            // same numbers\n            expect(List.stringComparator('1', '1')).to.equal(0);\n            // english strings\n            expect(List.stringComparator('a', 'b')).to.equal(-1);\n            expect(List.stringComparator('b', 'a')).to.equal(1);\n            expect(List.stringComparator('a', 'a')).to.equal(0);\n            // russian strings\n            expect(List.stringComparator('в', 'г')).to.equal(-1);\n            expect(List.stringComparator('г', 'в')).to.equal(1);\n            expect(List.stringComparator('г', 'г')).to.equal(0);\n        });\n        it('compares values as numbers', function () {\n            // numbers with different amount of digits as strings, <number> is used to convince TS\n            expect(List.numberComparator('12', '2')).to.equal(10);\n            expect(List.numberComparator('2', '12')).to.equal(-10);\n            // numbers with different amount of digits\n            expect(List.numberComparator(12, 2)).to.equal(10);\n            expect(List.numberComparator(2, 12)).to.equal(-10);\n            // numbers with same amount of digits\n            expect(List.numberComparator(1, 2)).to.equal(-1);\n            expect(List.numberComparator(2, 1)).to.equal(1);\n            // same numbers\n            expect(List.numberComparator(1, 1)).to.equal(0);\n        });\n    });\n    describe('comparator', function () {\n        it('by default provides comparator function which calls stringComparator with pre-bound extract functions', function () {\n            var array = [\n                { id: '3' },\n                { id: '2' },\n                { id: '1' }\n            ], sortFn = List.comparator({ sortBy: 'id' }), result = array\n                .map(function (item) { return item; }) // we need a copy, original array is sorted in-place\n                .sort(sortFn);\n            expect(result[0]).to.equal(array[2]);\n            expect(result[1]).to.equal(array[1]);\n            expect(result[2]).to.equal(array[0]);\n        });\n        it('allows to provide custom sortBy property', function () {\n            var array = [\n                { name: '3' },\n                { name: '2' },\n                { name: '1' }\n            ], sortFn = List.comparator({ sortBy: 'name' }), result = array\n                .map(function (item) { return item; }) // we need a copy, original array is sorted in-place\n                .sort(sortFn);\n            expect(result[0]).to.equal(array[2]);\n            expect(result[1]).to.equal(array[1]);\n            expect(result[2]).to.equal(array[0]);\n        });\n        it('allows to provide custom extract and compare functions', function () {\n            var array = [\n                { id: '13' },\n                { id: '2' },\n                { id: '1' }\n            ], sortFn = List.comparator({\n                compareFn: List.numberComparator,\n                sortBy: 'id'\n            }), result = array\n                .map(function (item) { return item; }) // we need a copy, original array is sorted in-place\n                .sort(sortFn);\n            expect(result[0]).to.equal(array[2]);\n            expect(result[1]).to.equal(array[1]);\n            expect(result[2]).to.equal(array[0]);\n        });\n        it('provides options to custom extract and compare functions', function () {\n            var array = [\n                { id: '3' },\n                { id: '2' },\n                { id: '1' }\n            ], options = {\n                sortBy: 'id',\n                extractFn: spy(function (item, opts) {\n                    expect(opts.extractFn).to.equal(options.extractFn);\n                    expect(opts.compareFn).to.equal(options.compareFn);\n                    return List.propertyExtractor('id')(item, opts);\n                }),\n                compareFn: spy(function (a, b, opts) {\n                    expect(opts.extractFn).to.equal(options.extractFn);\n                    expect(opts.compareFn).to.equal(options.compareFn);\n                    return List.numberComparator(a, b, opts);\n                })\n            }, sortFn = List.comparator(options), result = array\n                .map(function (item) { return item; }) // we need a copy, original array is sorted in-place\n                .sort(sortFn);\n            expect(result[0]).to.equal(array[2]);\n            expect(result[1]).to.equal(array[1]);\n            expect(result[2]).to.equal(array[0]);\n            expect(options.extractFn.callCount).to.be.equal(array.length * 2);\n            expect(options.compareFn.callCount).to.be.equal(array.length);\n        });\n    });\n    describe('propertyExtractor', function () {\n        it('returns a value of property', function () {\n            expect(List.propertyExtractor('id')({ id: 'foo' })).to.equal('foo');\n            expect(List.propertyExtractor('id')(undefined)).to.equal(null);\n            expect(List.propertyExtractor(null)('foo')).to.equal('foo');\n            expect(List.propertyExtractor(null)({ id: 'foo' })).to.deep.equal({ id: 'foo' });\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/List-spec.ts\n ** module id = 85\n ** module chunks = 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nexports.mocha = require('../../../test/mocha');\nvar r = require('./Response');\nvar expect = exports.mocha.chai.expect;\nvar rcsdk = exports.mocha.mock.rcsdk;\ndescribe('RCSDK.core.http.Response', function () {\n    \"use strict\";\n    describe('constructor tests', function () {\n        var goodMultipartMixedResponse = '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\r\\n' +\n            '\\r\\n' +\n            '{\\n' +\n            '  \"response\" : [ {\\n' +\n            '    \"status\" : 200\\n' +\n            '  }, {\\n' +\n            '    \"status\" : 200\\n' +\n            '  } ]\\n' +\n            '}\\n' +\n            '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\n' +\n            '\\n' +\n            '{\\n' +\n            '  \"foo\" : \"bar\"\\n' +\n            '}\\n' +\n            '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\n' +\n            '\\n' +\n            '{\\n' +\n            '  \"baz\" : \"qux\"\\n' +\n            '}\\n' +\n            '--Boundary_1245_945802293_1394135045248--\\n', multipartMixedResponseWithErrorPart = '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\n' +\n            '\\n' +\n            '{\\n' +\n            '  \"response\" : [ {\\n' +\n            '    \"status\" : 200\\n' +\n            '  }, {\\n' +\n            '    \"status\" : 404\\n' +\n            '  }, {\\n' +\n            '    \"status\" : 200\\n' +\n            '  } ]\\n' +\n            '}\\n' +\n            '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\n' +\n            '\\n' +\n            '{\\n' +\n            '  \"foo\" : \"bar\"\\n' +\n            '}\\n' +\n            '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\n' +\n            '\\n' +\n            '{\\n' +\n            '  \"message\" : \"object not found\"\\n' +\n            '}\\n' +\n            '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\n' +\n            '\\n' +\n            '{\\n' +\n            '  \"baz\" : \"qux\"\\n' +\n            '}\\n' +\n            '--Boundary_1245_945802293_1394135045248--\\n', badMultipartMixedResponse = '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\n' +\n            '\\n' +\n            'THIS IS JUNK AND CANNOT BE PARSED AS JSON\\n' +\n            '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\n' +\n            '\\n' +\n            '{\\n' +\n            '  \"foo\" : \"bar\"\\n' +\n            '}\\n' +\n            '--Boundary_1245_945802293_1394135045248\\n' +\n            'Content-Type: application/json\\n' +\n            '\\n' +\n            '{\\n' +\n            '  \"baz\" : \"qux\"\\n' +\n            '}\\n' +\n            '--Boundary_1245_945802293_1394135045248--\\n', multipartResponseHeaders = {\n            'content-type': 'multipart/mixed; boundary=Boundary_1245_945802293_1394135045248'\n        }, jsonResponseHeaders = {\n            'content-type': 'application/json; encoding=utf8'\n        };\n        it('parses headers into object', function () {\n            expect(r.$get(rcsdk.getContext(), 200, 'OK', '{}', jsonResponseHeaders).isJson()).to.equal(true);\n            expect(r.$get(rcsdk.getContext(), 207, 'Multi-Status', '{}', multipartResponseHeaders).isMultipart()).to.equal(true);\n        });\n        it('calls the success callback after parsing a good multi-part/mixed response', function () {\n            var response = r.$get(rcsdk.getContext(), 207, 'Multi-Status', goodMultipartMixedResponse, multipartResponseHeaders);\n            expect(response.error).to.equal(null);\n        });\n        it('calls the success callback for all individual parts that are parsed (including errors)', function () {\n            var res = r.$get(rcsdk.getContext(), 207, 'Multi-Status', multipartMixedResponseWithErrorPart, multipartResponseHeaders);\n            expect(res.error).to.equal(null);\n            expect(res.data.length).to.equal(3);\n            //expect(res.data[0]).to.be.instanceOf(r.Response); //FIXME\n            expect(res.data[0].error).to.be.equal(null);\n            expect(res.data[0].data.foo).to.be.equal('bar');\n            expect(res.data[0].status).to.be.equal(200);\n            //expect(res.data[1]).to.be.instanceOf(r.Response); //FIXME\n            expect(res.data[1].error).to.be.instanceOf(Error);\n            //expect(res.data[2]).to.be.instanceOf(r.Response); //FIXME\n            expect(res.data[2].error).to.be.equal(null);\n            expect(res.data[2].data.baz).to.be.equal('qux');\n            expect(res.data[2].status).to.be.equal(200);\n        });\n        it('calls the error callback if it fails to parse the parts info block', function () {\n            var response = r.$get(rcsdk.getContext(), 207, 'Multi-Status', badMultipartMixedResponse, multipartResponseHeaders);\n            expect(response.error).to.be.an.instanceof(Error);\n        });\n        it('calls the error callback if it is unable to parse the JSON data, passing the error object', function () {\n            var response = r.$get(rcsdk.getContext(), 200, 'OK', 'THIS IS JUNK', jsonResponseHeaders);\n            expect(response.error).to.be.an.instanceof(Error);\n            expect(response.body).to.equal('THIS IS JUNK');\n        });\n        it('uses the error_description property of the JSON data when there is an error but no message property', function () {\n            var response = r.$get(rcsdk.getContext(), 404, 'Error', '{\"error_description\": \"ERROR\"}', jsonResponseHeaders);\n            expect(response.error).to.be.an.instanceof(Error);\n            expect(response.error.message).to.equal('ERROR');\n        });\n        it('uses the description property of the JSON data when there is an error but no message or error_description properties', function () {\n            var response = r.$get(rcsdk.getContext(), 404, 'Error', '{\"description\": \"ERROR\"}', jsonResponseHeaders);\n            expect(response.error).to.be.an.instanceof(Error);\n            expect(response.error.message).to.equal('ERROR');\n        });\n        it('parses empty response', function () {\n            var response = r.$get(rcsdk.getContext(), 204, 'No Content', '', jsonResponseHeaders);\n            expect(response.error).to.equal(null);\n            expect(response.data).to.equal('');\n        });\n        it('parses empty response', function () {\n            var response = r.$get(rcsdk.getContext(), 200, 'OK', '{\"foo\":\"bar\"}', null);\n            expect(response.error).to.equal(null);\n            expect(response.data).to.deep.equal({ foo: 'bar' });\n            expect(response.getHeader('content-type')).to.equal('application/json');\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Response-spec.ts\n ** module id = 86\n ** module chunks = 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nexports.mocha = require('../../../test/mocha');\nvar r = require('./Request');\nvar expect = exports.mocha.chai.expect;\nvar rcsdk = exports.mocha.mock.rcsdk;\ndescribe('RCSDK.core.http.Request', function () {\n    describe('send', function () {\n        it('calls error callback if the URL is not specified or is falsy', function (done) {\n            r.$get(rcsdk.getContext()).send().catch(function (e) {\n                expect(e).to.be.instanceOf(Error);\n                done();\n            });\n        });\n    });\n    describe('checkOptions', function () {\n        it('defaults the method option to GET', function () {\n            var ajax = r.$get(rcsdk.getContext()).setOptions({ url: '/foo/bar' });\n            ajax.checkOptions();\n            expect(ajax.method).to.equal('GET');\n        });\n        it('it uppercases the method option, if specified', function () {\n            var ajax = r.$get(rcsdk.getContext()).setOptions({ url: '/foo/bar', method: 'get' });\n            ajax.checkOptions();\n            expect(ajax.method).to.equal('GET');\n        });\n        it('it uses the value of the async option, if specified', function () {\n            var ajax = r.$get(rcsdk.getContext()).setOptions({ url: '/foo/bar', async: false });\n            ajax.checkOptions();\n            expect(ajax.async).to.equal(false);\n        });\n        it('it defaults the async option to true, if not specified', function () {\n            var ajax = r.$get(rcsdk.getContext()).setOptions({ url: '/foo/bar' });\n            ajax.checkOptions();\n            expect(ajax.async).to.equal(true);\n        });\n        it('it defaults the headers option to an empty object, and then merges it with the default headers', function () {\n            var ajax = r.$get(rcsdk.getContext()).setOptions({ url: '/foo/bar' });\n            ajax.checkOptions();\n            expect(ajax.getHeader('Accept')).to.equal('application/json');\n            expect(ajax.getHeader('Content-Type')).to.equal('application/json');\n        });\n        it('it merges the specified headers with the default headers, giving the specified headers priority', function () {\n            var ajax = r.$get(rcsdk.getContext()).setOptions({\n                url: '/foo/bar',\n                headers: {\n                    'Accept': 'application/foo-bar',\n                    'Transfer-Encoding': 'chunked'\n                }\n            });\n            ajax.checkOptions();\n            expect(ajax.getHeader('Accept')).to.equal('application/foo-bar');\n            expect(ajax.getHeader('Content-Type')).to.equal('application/json');\n            expect(ajax.getHeader('Transfer-Encoding')).to.equal('chunked');\n        });\n    });\n    describe('destroy', function () {\n        it('aborts the native XHR object', function (done) {\n            var ajax = r.$get(rcsdk.getContext());\n            // Mock the XHR object\n            ajax.xhr = {\n                abort: function () {\n                    done();\n                }\n            };\n            ajax.destroy();\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Request-spec.ts\n ** module id = 87\n ** module chunks = 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nexports.mocha = require('../../../test/mocha');\nvar r = require('./MultipartRequest');\nvar expect = exports.mocha.chai.expect;\nvar rcsdk = exports.mocha.mock.rcsdk;\ndescribe('RCSDK.core.http.MultipartRequest', function () {\n    describe.skip('createNodeMessage', function () {\n        it('assembles message', function () {\n            var req = r.$get(rcsdk.getContext()), expected = '--Boundary_1428971641708\\n' +\n                'Content-Type: application/json\\n' +\n                '\\n' +\n                '{}\\n' +\n                '--Boundary_1428971641708\\n' +\n                'Content-Type: text/plain\\n' +\n                '\\n' +\n                'Foo\\n' +\n                '--Boundary_1428971641708--';\n            req.setBoundary('Boundary_1428971641708')\n                .addAttachment({ content: 'Foo' })\n                .createNodeMessage();\n            expect(req.body).to.be.instanceOf(Buffer);\n            expect(req.body.toString('utf-8')).to.equal(expected);\n        });\n        it('assembles message', function () {\n            var req = r.$get(rcsdk.getContext()), expected = '--Boundary_1428971641708\\n' +\n                'Content-Type: application/json\\n' +\n                '\\n' +\n                '{}\\n' +\n                '--Boundary_1428971641708\\n' +\n                'Content-Type: application/json\\n' +\n                'Content-Disposition: attachment; filename=file.txt\\n' +\n                '\\n' +\n                '{\"foo\":\"bar\"}\\n' +\n                '--Boundary_1428971641708--';\n            req.setBoundary('Boundary_1428971641708')\n                .addAttachment({ contentType: 'application/json', content: new Buffer('{\"foo\":\"bar\"}', 'utf-8') })\n                .createNodeMessage();\n            expect(req.body).to.be.instanceOf(Buffer);\n            expect(req.body.toString('utf-8')).to.equal(expected);\n        });\n        it('assembles message', function () {\n            var req = r.$get(rcsdk.getContext()), expected = '--Boundary_1428971641708\\n' +\n                'Content-Type: application/json\\n' +\n                '\\n' +\n                '{\"to\":[{\"phoneNumber\":\"12223334455\"}],\"faxResolution\":\"Low\"}\\n' +\n                '--Boundary_1428971641708\\n' +\n                'Content-Type: application/json\\n' +\n                'Content-Disposition: attachment; filename=file.txt\\n' +\n                '\\n' +\n                '{\"foo\":\"bar\"}\\n' +\n                '--Boundary_1428971641708--';\n            req.body = {\n                \"to\": [{ \"phoneNumber\": \"12223334455\" }],\n                \"faxResolution\": \"Low\"\n            };\n            req.setBoundary('Boundary_1428971641708')\n                .addAttachment({ contentType: 'application/json', content: new Buffer('{\"foo\":\"bar\"}', 'utf-8') })\n                .createNodeMessage();\n            expect(req.body).to.be.instanceOf(Buffer);\n            expect(req.body.toString('utf-8')).to.equal(expected);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/MultipartRequest-spec.ts\n ** module id = 88\n ** module chunks = 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar req = require('./Request');\nvar MultipartRequest = (function (_super) {\n    __extends(MultipartRequest, _super);\n    function MultipartRequest() {\n        _super.apply(this, arguments);\n        this.attachments = [];\n    }\n    MultipartRequest.prototype.addAttachment = function (attachment) {\n        this.attachments.push(attachment);\n        return this;\n    };\n    MultipartRequest.prototype.setBoundary = function (boundary) {\n        this.boundary = boundary;\n        return this;\n    };\n    MultipartRequest.prototype.createNodeMessage = function () {\n        var _this = this;\n        this.boundary = this.boundary || 'Boundary_' + Date.now();\n        var messageParts = [];\n        messageParts.push('--' + this.boundary + '\\n');\n        messageParts.push('Content-Type: application/json\\n');\n        messageParts.push('\\n');\n        messageParts.push(JSON.stringify(this.body) + '\\n');\n        this.attachments.forEach(function (attachment) {\n            if (!attachment.contentType)\n                attachment.contentType = 'text/plain';\n            messageParts.push('--' + _this.boundary + '\\n');\n            messageParts.push('Content-Type: ' + attachment.contentType + '\\n');\n            if (attachment.contentType != 'text/plain' || !!attachment.name) {\n                messageParts.push('Content-Disposition: attachment; filename=' + (attachment.name || 'file.txt') + '\\n');\n            }\n            messageParts.push('\\n');\n            messageParts.push(attachment.content || '');\n            messageParts.push('\\n');\n        });\n        messageParts.push('--' + this.boundary + '--');\n        this.setContentType('multipart/mixed; boundary=' + this.boundary);\n        this.body = Buffer.concat(messageParts.map(function (msg) {\n            return (msg instanceof Buffer) ? msg : new Buffer(msg, 'utf-8');\n        }));\n    };\n    MultipartRequest.prototype.createBrowserMessage = function () {\n        var formData = new FormData();\n        formData.append('platform-json-payload', new File([JSON.stringify(this.body)], 'request.json', { type: 'application/json' }));\n        this.attachments.forEach(function (attachment) {\n            formData.append(attachment.name, attachment);\n        });\n        this.setContentType('');\n        this.body = formData;\n    };\n    MultipartRequest.prototype.send = function () {\n        if (typeof Buffer == 'function') {\n            this.createNodeMessage();\n        }\n        else {\n            this.createBrowserMessage();\n        }\n        return _super.prototype.send.call(this);\n    };\n    return MultipartRequest;\n})(req.Request);\nexports.MultipartRequest = MultipartRequest;\nfunction $get(context) {\n    return new MultipartRequest(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/MultipartRequest.ts\n ** module id = 89\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar r = require('./http/Response');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.core.Helper', function () {\n    'use strict';\n    var Helper = rcsdk.getHelper(), defaultUrl = 'default', defaultSyncUrl = 'default-sync';\n    function attachSpy(suite) {\n        suite.beforeEach(function () {\n            this._createUrl = Helper.createUrl.bind(Helper);\n            Helper.createUrl = spy(function (options) {\n                options = options || {};\n                return (options.sync ? defaultSyncUrl : defaultUrl);\n            });\n        });\n        suite.afterEach(function () {\n            Helper.createUrl = this._createUrl;\n        });\n    }\n    describe('getId', function () {\n        it('return value of object.id', function () {\n            expect(Helper.getId({ id: 'foo' })).to.equal('foo');\n            expect(Helper.getId({})).to.be.an('undefined');\n        });\n    });\n    describe('isNew', function () {\n        it('returns true if object does not have id or url', function () {\n            expect(Helper.isNew({ id: 'foo' })).to.equal(true);\n            expect(Helper.isNew({ uri: 'foo' })).to.equal(true);\n            expect(Helper.isNew({})).to.equal(true);\n            expect(Helper.isNew({ id: 'foo', uri: 'bar' })).to.equal(false);\n        });\n    });\n    describe('loadRequest', function () {\n        attachSpy(this);\n        it('provides given url, if not - object.url, if not - default url', function () {\n            expect(Helper.loadRequest({ uri: 'object-uri' }, { url: 'given-url' }).url).to.equal('given-url');\n            expect(Helper.loadRequest(null, { url: 'given-url' }).url).to.equal('given-url');\n            expect(Helper.loadRequest({ uri: 'object-uri' }).url).to.equal('object-uri');\n            expect(Helper.loadRequest().url).to.equal(defaultUrl);\n            expect(Helper.createUrl).to.be.calledOnce;\n        });\n    });\n    describe('saveRequest', function () {\n        attachSpy(this);\n        it('provides given url, if not - object.url, if not - default url', function () {\n            expect(Helper.saveRequest({ uri: 'object-uri' }, { url: 'given-url' }).url).to.equal('given-url');\n            expect(Helper.saveRequest({ uri: 'object-uri' }).url).to.equal('object-uri');\n            expect(Helper.saveRequest({}, {}).url).to.equal(defaultUrl);\n            expect(Helper.createUrl).to.be.calledOnce;\n        });\n        it('throws exceptions if no object is provided', function () {\n            expect(function () { Helper.saveRequest(); }).to.throw(Error);\n        });\n    });\n    describe('deleteRequest', function () {\n        attachSpy(this);\n        it('provides given url, if not - object.url, if not - exception', function () {\n            expect(Helper.deleteRequest({ uri: 'object-uri' }, { url: 'given-url' }).url).to.equal('given-url');\n            expect(Helper.deleteRequest({ uri: 'object-uri' }).url).to.equal('object-uri');\n            expect(function () { Helper.deleteRequest({}); }).to.throw(Error);\n        });\n        it('throws exceptions if no object is provided', function () {\n            expect(function () { Helper.deleteRequest(); }).to.throw(Error);\n        });\n    });\n    describe('syncRequest', function () {\n        attachSpy(this);\n        it('provides default sync url if nothing was given', function () {\n            expect(Helper.syncRequest({ url: 'given-url' }).url).to.equal('given-url');\n            expect(Helper.syncRequest().url).to.equal(defaultSyncUrl);\n            expect(Helper.createUrl).to.be.calledOnce;\n        });\n        it('sets syncType to FSync if no syncToken was given', function () {\n            expect(Helper.syncRequest().query.syncType).to.equal('FSync');\n        });\n        it('sets syncType to ISync if syncToken was given and deletes all other options.get', function () {\n            var options = {\n                get: {\n                    syncToken: 'foo',\n                    foo: 'foo'\n                }\n            }, request = Helper.syncRequest(options);\n            expect(request.query.foo).to.be.an('undefined');\n            expect(request.query.syncType).to.equal('ISync');\n            expect(request.query.syncToken).to.equal(options.get.syncToken);\n        });\n    });\n    describe('index', function () {\n        it('creates an indexed object of given array items', function () {\n            var array = [\n                { id: 'foo', name: 'foo' },\n                { id: 'bar', name: 'bar' }\n            ], index = Helper.index(array);\n            expect(index.foo).to.equal(array[0]);\n            expect(index.bar).to.equal(array[1]);\n        });\n        it('creates an indexed object using given getId callback of given array items', function () {\n            // array items should not have name property to ensure test is real\n            var array = [\n                { name: 'foo' },\n                { name: 'bar' }\n            ], index = Helper.index(array, function (item) { return item.name; });\n            expect(index.foo).to.equal(array[0]);\n            expect(index.bar).to.equal(array[1]);\n        });\n        it('if two or more items have same id the first wins by default', function () {\n            var array = [\n                { id: 'foo', name: 'foo' },\n                { id: 'foo', name: 'bar' }\n            ], index = Helper.index(array);\n            expect(index.foo).to.equal(array[0]);\n            expect(Object.keys(index)).to.deep.equal(['foo']);\n            expect(Object.keys(index).length).to.equal(1);\n        });\n        it('if two or more items have same id resulting index will contain an array of them if flag is provided', function () {\n            var array = [\n                { id: 'foo', name: 'foo' },\n                { id: 'foo', name: 'bar' }\n            ], index = Helper.index(array, null, true);\n            expect(index.foo).to.deep.equal(array);\n            expect(Object.keys(index)).to.deep.equal(['foo']);\n            expect(Object.keys(index).length).to.equal(1);\n        });\n        it('if items do not have id resulting index will not contain them', function () {\n            var array = [\n                { id: 'foo', name: 'foo' },\n                { name: 'bar' }\n            ], index = Helper.index(array);\n            expect(index.foo).to.equal(array[0]);\n            expect(Object.keys(index)).to.deep.equal(['foo']);\n            expect(Object.keys(index).length).to.equal(1);\n        });\n    });\n    describe('merge', function () {\n        it('replaces target items with supplement ones if they same ids, original target items stay untouched', function () {\n            var target = [\n                { id: 'foo', name: 'foo' },\n                { id: 'bar', name: 'bar' }\n            ], supplement = [\n                { id: 'foo', name: 'foo-x' }\n            ], merged = Helper.merge(target, supplement);\n            // merged first item belongs to supplement\n            expect(merged[0]).to.equal(supplement[0]);\n            // target item is not in merged array\n            expect(merged.indexOf(target[0])).to.equal(-1);\n            expect(merged[0].id).to.equal('foo');\n            expect(merged[0].name).to.equal('foo-x');\n            // target item stays untouched\n            expect(target[0].name).to.equal('foo');\n            expect(merged.length).to.equal(2);\n        });\n        it('applies properties of supplement to target items if they have same ids (target items are mutated)', function () {\n            var target = [\n                { id: 'foo', name: 'foo' },\n                { id: 'bar', name: 'bar' }\n            ], supplement = [\n                { id: 'foo', name: 'foo-x' }\n            ], merged = Helper.merge(target, supplement, null, true);\n            // merged first item belongs to target\n            expect(merged[0]).to.not.equal(supplement[0]);\n            expect(merged[0]).to.equal(target[0]);\n            // merged item has new properties and proper id\n            expect(merged[0].id).to.equal('foo');\n            expect(merged[0].name).to.equal('foo-x');\n            // target item was mutated\n            expect(target[0].name).to.equal('foo-x');\n            expect(merged.length).to.equal(2);\n        });\n        it('allows to provide custom getId function)', function () {\n            var target = [\n                { id: 'foo', name: 'foo' },\n                { id: 'bar', name: 'bar' }\n            ], supplement = [\n                { id: 'foo-x', name: 'foo' }\n            ], merged = Helper.merge(target, supplement, function (item) { return item.name; });\n            // merged first item belongs to supplement\n            expect(merged[0]).to.equal(supplement[0]);\n            // target item is not in merged array\n            expect(merged.indexOf(target[0])).to.equal(-1);\n            // merged item has new properties and proper id\n            expect(merged[0].name).to.equal('foo');\n            expect(merged[0].id).to.equal('foo-x');\n            // target item stays untouched\n            expect(target[0].id).to.equal('foo');\n            expect(merged.length).to.equal(2);\n        });\n        it('appends supplement', function () {\n            var target = [\n                { id: 'foo', name: 'foo' },\n                { id: 'bar', name: 'bar' }\n            ], supplement = [\n                { id: 'foo-x', name: 'foo' }\n            ], merged = Helper.merge(target, supplement);\n            expect(merged.length).to.equal(3);\n            expect(merged[2].name).to.equal('foo');\n            expect(merged[2].id).to.equal('foo-x');\n        });\n    });\n    describe('parseMultipartResponse', function () {\n        it('evaluates multipart response', function () {\n            var ajax = {\n                isMultipart: function () {\n                    return true;\n                },\n                data: [\n                    { data: 'foo' },\n                    { data: 'bar' },\n                    { error: new Error('this is skipped') }\n                ]\n            };\n            var items = Helper.parseMultipartResponse(ajax);\n            expect(ajax.isMultipart()).to.equal(true);\n            expect(items).to.deep.equal(['foo', 'bar']);\n            expect(items.length).to.equal(2);\n        });\n        it('evaluates one-item response', function () {\n            var ajax = r.$get(rcsdk.getContext(), 200, 'OK', { foo: 'foo' }), items = Helper.parseMultipartResponse(ajax);\n            expect(items).to.deep.equal([{ foo: 'foo' }]);\n            expect(items.length).to.equal(1);\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Helper-spec.ts\n ** module id = 90\n ** module chunks = 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nexports.mocha = require('../../test/mocha');\nvar expect = exports.mocha.chai.expect;\nvar spy = exports.mocha.sinon.spy;\nvar mock = exports.mocha.mock;\nvar rcsdk = exports.mocha.rcsdk;\ndescribe('RCSDK.core.AjaxObserver', function () {\n    var o = rcsdk.getAjaxObserver(), platform = rcsdk.getPlatform(), path = '/restapi/xxx';\n    describe('events fire when Ajax happen', function () {\n        mock.registerHooks(this);\n        afterEach(function () {\n            o.offAll();\n        });\n        beforeEach(function () {\n            o.offAll();\n        });\n        it('beforeRequest', function (done) {\n            mock.apiCall(path, {});\n            var xspy = spy(function (ajax) { });\n            o.on(o.events.beforeRequest, xspy);\n            platform\n                .apiCall({ url: path })\n                .then(function () {\n                expect(xspy).to.be.calledOnce;\n                done();\n            })\n                .catch(function (e) { done(e); });\n        });\n        it('requestSuccess', function (done) {\n            mock.apiCall(path, {});\n            var xspy = spy(function (ajax) { });\n            o.on(o.events.requestSuccess, xspy);\n            platform\n                .apiCall({ url: path })\n                .then(function () {\n                expect(xspy).to.be.calledOnce;\n                done();\n            })\n                .catch(function (e) { done(e); });\n        });\n        it('requestError', function (done) {\n            var xspy = spy(function (ajax) { });\n            o.on(o.events.requestError, xspy);\n            platform\n                .apiCall({ url: path })\n                .then(function () {\n                done(new Error('This should never be reached'));\n            })\n                .catch(function (e) {\n                expect(xspy).to.be.calledOnce;\n                done();\n            });\n        });\n    });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/AjaxObserver-spec.ts\n ** module id = 91\n ** module chunks = 2\n **/"],"sourceRoot":""}