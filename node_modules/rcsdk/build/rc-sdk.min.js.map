{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk.js","webpack/bootstrap eb2dd716af20958cec97","src/lib/RCSDK.ts","src/lib/helpers/Conferencing.ts","src/lib/core/Helper.ts","src/lib/core/Utils.ts","src/lib/core/pubnub/PubnubMock.ts","src/lib/core/Observable.ts","src/lib/core/Log.ts","src/lib/core/xhr/XhrMock.ts","src/lib/core/xhr/XhrResponse.ts","src/lib/core/AjaxObserver.ts","src/lib/core/Cache.ts","src/lib/core/Context.ts","src/lib/core/List.ts","src/lib/core/PageVisibility.ts","src/lib/core/Platform.ts","src/lib/core/http/Request.ts","src/lib/core/http/Headers.ts","src/lib/core/http/Response.ts","src/lib/core/Subscription.ts","src/lib/core/Validator.ts","src/lib/helpers/Account.ts","src/lib/helpers/BlockedNumber.ts","src/lib/helpers/Call.ts","src/lib/helpers/Presence.ts","src/lib/helpers/Extension.ts","src/lib/helpers/Contact.ts","src/lib/helpers/ContactGroup.ts","src/lib/helpers/Country.ts","src/lib/helpers/Device.ts","src/lib/helpers/DeviceModel.ts","src/lib/helpers/ForwardingNumber.ts","src/lib/helpers/Language.ts","src/lib/helpers/Location.ts","src/lib/helpers/State.ts","src/lib/helpers/Message.ts","src/lib/helpers/PhoneNumber.ts","src/lib/helpers/Ringout.ts","src/lib/helpers/Service.ts","src/lib/helpers/ShippingMethod.ts","src/lib/helpers/Timezone.ts","external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}","external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}","external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}","external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}"],"names":["root","factory","exports","module","require","e","define","amd","this","__WEBPACK_EXTERNAL_MODULE_41__","__WEBPACK_EXTERNAL_MODULE_42__","__WEBPACK_EXTERNAL_MODULE_43__","__WEBPACK_EXTERNAL_MODULE_44__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","pubnubMock","xhrMock","xhrResponse","ajaxObserver","cache","context","helper","list","log","observable","pageVisibility","platform","subscription","utils","validator","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","promise","pubnub","RCSDK","options","_context","$get","injections","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","prototype","getContext","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","version","url","sandbox","production","localStorage","Promise","PUBNUB","XHR","XMLHttpRequest","ActiveXObject","e1","e2","e3","e4","Error","createSingleton","Conferencing","__extends","d","b","__","constructor","hasOwnProperty","_super","apply","arguments","createUrl","Helper","defaultProperty","getId","object","isNew","getUri","resetAsNew","uri","parseMultipartResponse","ajax","isMultipart","data","filter","result","error","map","loadRequest","extend","method","saveRequest","post","body","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","array","getIdFn","gather","bind","reduce","item","push","merge","target","supplement","mergeItems","_this","supplementIndex","updatedIDs","newItem","forEach","indexOf","Utils","hasOwn","Object","toString","rdigit","class2type","split","name","toLowerCase","targetObject","sourceObject","args","_i","length","src","copy","copyIsArray","clone","i","deep","isFunction","isPlainObject","isArray","undefined","cb","res","queryStringify","parameters","v","vv","encodeURIComponent","join","parseQueryString","queryString","argsParsed","self","arg","decodeURIComponent","trim","pair","key","value","isEmail","multiple","test","isPhoneNumber","argumentsToArray","Array","slice","isDate","obj","type","isWindow","isNaN","String","nodeType","getProperty","property","part","poll","fn","interval","timeout","stopPolling","next","delay","setTimeout","clearTimeout","parseString","s","parseNumber","n","parseFloat","PubnubFactory","PubnubMock","crypto_obj","getPubnubReal","ready","subscribe","on","channel","message","unsubscribe","off","receiveMessage","msg","emit","Observable","init","defineProperty","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","events","callback","isOneTimeEventFired","debug","getOneTimeEventArgumens","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","offAll","destroy","emitAndCallback","concat","Log","console","warn","info","logDebug","logInfo","logWarnings","logErrors","addTimestamps","disableAll","enableAll","parseArguments","unshift","Date","toLocaleString","XhrMock","responses","async","requestHeaders","withCredentials","readyState","responseHeaders","status","getResponseHeader","header","setRequestHeader","getAllResponseHeaders","open","send","contentType","getRequestHeader","JSON","parse","currentResponse","find","onerror","setStatus","setResponseHeader","response","getPromise","onLoad","stringify","responseText","onload","then","abort","XhrResponse","add","clear","path","AjaxObserver","beforeRequest","requestSuccess","requestError","Cache","storage","getLocalStorage","prefix","prefixKey","setItem","removeItem","getItem","clean","Context","singletons","stubPubnub","stubAjax","usePubnubStub","flag","useAjaxStub","getPubnub","getXHR","List","numberComparator","stringComparator","propertyExtractor","a","localeCompare","comparator","extractFn","sortBy","compareFn","item1","item2","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","opt","filterBy","filterFn","pass","PageVisibility","change","hidden","onchange","evt","window","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","document","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Platform","request","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","cacheId","pollInterval","releaseTimeout","getStorage","getRequest","clearStorage","btoa","Buffer","getCredentials","credentials","atob","secret","remember","getAuthURL","apiUrl","response_type","redirect_uri","redirectUri","client_id","state","brand_id","brandId","display","prompt","addServer","parseAuthRedirectUrl","qs","reverse","error_description","authorize","access_token_ttl","refresh_token_ttl","username","grant_type","password","extension","code","reject","authCall","setCache","isPaused","now","parseInt","pause","resume","refresh","resolve","refreshPolling","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","forcedTokenType","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","setOptions","setHeader","isUnauthorized","put","builtUrl","hasHttp","replace","addMethod","addToken","Request","r","xhr","observer","isLoaded","setHeaders","headers","checkOptions","hasHeader","Headers","jsonContentType","toUpperCase","getEncodedBody","isJson","isUrlEncoded","responsePromise","statusText","getHeader","isContentType","getContentType","setContentType","multipartContentType","urlencodedContentType","Response","tmp","bodySeparator","shift","json","parts","headerSeparator","checkStatus","getError","boundary","match","boundarySeparator","pop","statusInfo","stack","description","Subscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","eventFilters","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","register","isSubscribed","renew","addEvents","setEvents","getFullEventFilters","updateSubscription","subscribeAtPubnub","remove","timeToExpiration","renewHandicapMs","decrypt","encryptionKey","encryptKey","keyEncoding","keyLength","mode","notify","ssl","subscribe_key","env","connect","Validator","validate","validators","errors","isValid","field","email","phone","required","max","min","Account","BlockedNumber","extensionId","phoneNumber","Call","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","Presence","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","ex","presenceCall","Extension","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","toLocaleLowerCase","extensionNumber","Contact","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","getEmails","getPhones","getFaxes","getAddresses","string","inAddresses","transformFn","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","ContactGroup","groupName","Country","Device","deviceModel","order","emergencyServiceAddress","street","city","country","zip","customerName","model","DeviceModel","device","sku","ForwardingNumber","forwardingNumber","hasFeature","feature","features","Language","Location","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","State","countryId","Message","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumber","tollFreeAreaCodes","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","Ringout","ringout","callStatus","isSuccess","isError","Service","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","ShippingMethod","Timezone"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_44__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_44__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = __webpack_require__(5);\nvar xhrMock = __webpack_require__(8);\nvar xhrResponse = __webpack_require__(9);\nvar ajaxObserver = __webpack_require__(10);\nvar cache = __webpack_require__(11);\nvar context = __webpack_require__(12);\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(13);\nvar log = __webpack_require__(7);\nvar observable = __webpack_require__(6);\nvar pageVisibility = __webpack_require__(14);\nvar platform = __webpack_require__(15);\nvar subscription = __webpack_require__(19);\nvar utils = __webpack_require__(4);\nvar validator = __webpack_require__(20);\nvar accountHelper = __webpack_require__(21);\nvar blockedNumberHelper = __webpack_require__(22);\nvar callHelper = __webpack_require__(23);\nvar contactHelper = __webpack_require__(26);\nvar contactGroupHelper = __webpack_require__(27);\nvar conferencingHelper = __webpack_require__(2);\nvar countryHelper = __webpack_require__(28);\nvar deviceHelper = __webpack_require__(29);\nvar deviceModelHelper = __webpack_require__(30);\nvar extensionHelper = __webpack_require__(25);\nvar forwardingNumberHelper = __webpack_require__(31);\nvar languageHelper = __webpack_require__(32);\nvar locationHelper = __webpack_require__(33);\nvar messageHelper = __webpack_require__(35);\nvar phoneNumberHelper = __webpack_require__(36);\nvar presenceHelper = __webpack_require__(24);\nvar ringoutHelper = __webpack_require__(37);\nvar serviceHelper = __webpack_require__(38);\nvar shippingMethodHelper = __webpack_require__(39);\nvar stateHelper = __webpack_require__(34);\nvar timezoneHelper = __webpack_require__(40);\nvar promise = __webpack_require__(41);\nvar pubnub = __webpack_require__(42);\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : __webpack_require__(43)),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (__webpack_require__(44))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(6);\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar log = __webpack_require__(7);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(4);\nvar log = __webpack_require__(7);\nvar xhrResponse = __webpack_require__(9); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\nvar XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(6);\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(6);\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(6);\nvar cache = __webpack_require__(11);\nvar request = __webpack_require__(16);\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(17);\nvar ajaxObserver = __webpack_require__(10);\nvar r = __webpack_require__(18);\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(17);\nvar log = __webpack_require__(7);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(6);\nvar platform = __webpack_require__(15);\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar validator = __webpack_require__(20);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(13);\nvar presence = __webpack_require__(24);\nvar contact = __webpack_require__(26);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar subscription = __webpack_require__(19);\nvar extension = __webpack_require__(25);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(13);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar validator = __webpack_require__(20);\nvar list = __webpack_require__(13);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar validator = __webpack_require__(20);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar validator = __webpack_require__(20);\nvar extension = __webpack_require__(25);\nvar deviceModel = __webpack_require__(30);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(13);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(13);\nvar state = __webpack_require__(34);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(13);\nvar country = __webpack_require__(28);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(13);\nvar validator = __webpack_require__(20);\nvar subscription = __webpack_require__(19);\nvar platform = __webpack_require__(15);\nvar contact = __webpack_require__(26);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(13);\nvar extension = __webpack_require__(25);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar validator = __webpack_require__(20);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\nif(typeof __WEBPACK_EXTERNAL_MODULE_44__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_44__;\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=rc-sdk.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap eb2dd716af20958cec97\n **/","/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = require('./core/pubnub/PubnubMock');\nvar xhrMock = require('./core/xhr/XhrMock');\nvar xhrResponse = require('./core/xhr/XhrResponse');\nvar ajaxObserver = require('./core/AjaxObserver');\nvar cache = require('./core/Cache');\nvar context = require('./core/Context');\nvar helper = require('./core/Helper');\nvar list = require('./core/List');\nvar log = require('./core/Log');\nvar observable = require('./core/Observable');\nvar pageVisibility = require('./core/PageVisibility');\nvar platform = require('./core/Platform');\nvar subscription = require('./core/Subscription');\nvar utils = require('./core/Utils');\nvar validator = require('./core/Validator');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar promise = require('es6-promise');\nvar pubnub = require('pubnub');\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : require('dom-' + 'storage')),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (require('xhr' + '2'))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/RCSDK.ts\n ** module id = 1\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Conferencing.ts\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Helper.ts\n ** module id = 3\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Utils.ts\n ** module id = 4\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('../Observable');\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/pubnub/PubnubMock.ts\n ** module id = 5\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar log = require('./Log');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Observable.ts\n ** module id = 6\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Log.ts\n ** module id = 7\n ** module chunks = 0 2\n **/","var utils = require('../Utils');\nvar log = require('../Log');\nvar xhrResponse = require('./XhrResponse'); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrMock.ts\n ** module id = 8\n ** module chunks = 0\n **/","var XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrResponse.ts\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/AjaxObserver.ts\n ** module id = 10\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Cache.ts\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Context.ts\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/List.ts\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/PageVisibility.ts\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar cache = require('./Cache');\nvar request = require('./http/Request');\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Platform.ts\n ** module id = 15\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar ajaxObserver = require('../AjaxObserver');\nvar r = require('./Response');\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Request.ts\n ** module id = 16\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = require('../Utils');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Headers.ts\n ** module id = 17\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar log = require('../Log');\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Response.ts\n ** module id = 18\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar platform = require('./Platform');\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Subscription.ts\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Validator.ts\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Account.ts\n ** module id = 21\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/BlockedNumber.ts\n ** module id = 22\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar presence = require('./Presence');\nvar contact = require('./Contact');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Call.ts\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar subscription = require('../core/Subscription');\nvar extension = require('./Extension');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Presence.ts\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Extension.ts\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar list = require('../core/List');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Contact.ts\n ** module id = 26\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ContactGroup.ts\n ** module id = 27\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Country.ts\n ** module id = 28\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar extension = require('./Extension');\nvar deviceModel = require('./DeviceModel');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Device.ts\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/DeviceModel.ts\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ForwardingNumber.ts\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Language.ts\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar state = require('./State');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Location.ts\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar country = require('./Country');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/State.ts\n ** module id = 34\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar validator = require('../core/Validator');\nvar subscription = require('../core/Subscription');\nvar platform = require('../core/Platform');\nvar contact = require('./Contact');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Message.ts\n ** module id = 35\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar extension = require('./Extension');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/PhoneNumber.ts\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Ringout.ts\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Service.ts\n ** module id = 38\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ShippingMethod.ts\n ** module id = 39\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Timezone.ts\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}\n ** module id = 41\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}\n ** module id = 42\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}\n ** module id = 43\n ** module chunks = 0\n **/","if(typeof __WEBPACK_EXTERNAL_MODULE_44__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_44__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}\n ** module id = 44\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}